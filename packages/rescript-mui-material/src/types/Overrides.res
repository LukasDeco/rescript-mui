// This file is generated automatically by helpers/src/GenerateOverrides.res. Do not edit manually!

type accordionClassKey = {
  root?: ReactDOM.Style.t,
  rounded?: ReactDOM.Style.t,
  expanded?: ReactDOM.Style.t,
  disabled?: ReactDOM.Style.t,
  gutters?: ReactDOM.Style.t,
  region?: ReactDOM.Style.t,
}

type accordionActionsClassKey = {
  root?: ReactDOM.Style.t,
  spacing?: ReactDOM.Style.t,
}

type buttonClassKey = {
  root?: ReactDOM.Style.t,
  text?: ReactDOM.Style.t,
  textInherit?: ReactDOM.Style.t,
  textPrimary?: ReactDOM.Style.t,
  textSecondary?: ReactDOM.Style.t,
  textSuccess?: ReactDOM.Style.t,
  textError?: ReactDOM.Style.t,
  textInfo?: ReactDOM.Style.t,
  textWarning?: ReactDOM.Style.t,
  outlined?: ReactDOM.Style.t,
  outlinedInherit?: ReactDOM.Style.t,
  outlinedPrimary?: ReactDOM.Style.t,
  outlinedSecondary?: ReactDOM.Style.t,
  outlinedSuccess?: ReactDOM.Style.t,
  outlinedError?: ReactDOM.Style.t,
  outlinedInfo?: ReactDOM.Style.t,
  outlinedWarning?: ReactDOM.Style.t,
  contained?: ReactDOM.Style.t,
  containedInherit?: ReactDOM.Style.t,
  containedPrimary?: ReactDOM.Style.t,
  containedSecondary?: ReactDOM.Style.t,
  containedSuccess?: ReactDOM.Style.t,
  containedInfo?: ReactDOM.Style.t,
  containedError?: ReactDOM.Style.t,
  containedWarning?: ReactDOM.Style.t,
  disableElevation?: ReactDOM.Style.t,
  focusVisible?: ReactDOM.Style.t,
  disabled?: ReactDOM.Style.t,
  colorInherit?: string,
  textSizeSmall?: ReactDOM.Style.t,
  textSizeMedium?: ReactDOM.Style.t,
  textSizeLarge?: ReactDOM.Style.t,
  outlinedSizeSmall?: ReactDOM.Style.t,
  outlinedSizeMedium?: ReactDOM.Style.t,
  outlinedSizeLarge?: ReactDOM.Style.t,
  containedSizeSmall?: ReactDOM.Style.t,
  containedSizeMedium?: ReactDOM.Style.t,
  containedSizeLarge?: ReactDOM.Style.t,
  sizeSmall?: ReactDOM.Style.t,
  sizeMedium?: ReactDOM.Style.t,
  sizeLarge?: ReactDOM.Style.t,
  fullWidth?: ReactDOM.Style.t,
  startIcon?: ReactDOM.Style.t,
  endIcon?: ReactDOM.Style.t,
  iconSizeSmall?: ReactDOM.Style.t,
  iconSizeMedium?: ReactDOM.Style.t,
  iconSizeLarge?: ReactDOM.Style.t,
}

type buttonBaseClassKey = {
  root?: ReactDOM.Style.t,
  disabled?: ReactDOM.Style.t,
  focusVisible?: ReactDOM.Style.t,
}

type paperClassKey = {
  root?: ReactDOM.Style.t,
  rounded?: ReactDOM.Style.t,
  outlined?: ReactDOM.Style.t,
  elevation?: ReactDOM.Style.t,
  elevation0?: ReactDOM.Style.t,
  elevation1?: ReactDOM.Style.t,
  elevation2?: ReactDOM.Style.t,
  elevation3?: ReactDOM.Style.t,
  elevation4?: ReactDOM.Style.t,
  elevation5?: ReactDOM.Style.t,
  elevation6?: ReactDOM.Style.t,
  elevation7?: ReactDOM.Style.t,
  elevation8?: ReactDOM.Style.t,
  elevation9?: ReactDOM.Style.t,
  elevation10?: ReactDOM.Style.t,
  elevation11?: ReactDOM.Style.t,
  elevation12?: ReactDOM.Style.t,
  elevation13?: ReactDOM.Style.t,
  elevation14?: ReactDOM.Style.t,
  elevation15?: ReactDOM.Style.t,
  elevation16?: ReactDOM.Style.t,
  elevation17?: ReactDOM.Style.t,
  elevation18?: ReactDOM.Style.t,
  elevation19?: ReactDOM.Style.t,
  elevation20?: ReactDOM.Style.t,
  elevation21?: ReactDOM.Style.t,
  elevation22?: ReactDOM.Style.t,
  elevation23?: ReactDOM.Style.t,
  elevation24?: ReactDOM.Style.t,
}


type t = {
  @as("MuiAccordion") muiAccordion: accordionClassKey,
  @as("MuiAccordionActions") muiAccordionActions: accordionActionsClassKey,
  @as("MuiButton") muiButton: buttonClassKey,
  @as("MuiButtonBase") muiButtonBase: buttonBaseClassKey,
  @as("MuiPaper") muiPaper: paperClassKey,
}
