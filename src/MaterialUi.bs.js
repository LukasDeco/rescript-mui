// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Curry                   = require("bs-platform/lib/js/curry.js");
var Js_boolean              = require("bs-platform/lib/js/js_boolean.js");
var ListLabels              = require("bs-platform/lib/js/listLabels.js");
var ReasonReact             = require("reason-react/src/ReasonReact.js");
var Js_null_undefined       = require("bs-platform/lib/js/js_null_undefined.js");
var Styles                  = require("material-ui/styles");
var Tab                     = require("material-ui/Tabs/Tab");
var Card                    = require("material-ui/Card/Card");
var Chip                    = require("material-ui/Chip/Chip");
var Grid                    = require("material-ui/Grid/Grid");
var Icon                    = require("material-ui/Icon/Icon");
var List                    = require("material-ui/List/List");
var Menu                    = require("material-ui/Menu/Menu");
var Tabs                    = require("material-ui/Tabs/Tabs");
var Red                     = require("material-ui/colors/red");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");
var Badge                   = require("material-ui/Badge/Badge");
var Input                   = require("material-ui/Input/Input");
var Modal                   = require("material-ui/Modal/Modal");
var Paper                   = require("material-ui/Paper/Paper");
var Radio                   = require("material-ui/Radio/Radio");
var Table                   = require("material-ui/Table/Table");
var Blue                    = require("material-ui/colors/blue");
var Cyan                    = require("material-ui/colors/cyan");
var Grey                    = require("material-ui/colors/grey");
var Lime                    = require("material-ui/colors/lime");
var Pink                    = require("material-ui/colors/pink");
var Teal                    = require("material-ui/colors/teal");
var Step                    = require("material-ui/Stepper/Step");
var Amber                   = require("material-ui/colors/amber");
var Brown                   = require("material-ui/colors/brown");
var Green                   = require("material-ui/colors/green");
var AppBar                  = require("material-ui/AppBar/AppBar");
var Avatar                  = require("material-ui/Avatar/Avatar");
var Button                  = require("material-ui/Button/Button");
var Dialog                  = require("material-ui/Dialog/Dialog");
var Drawer                  = require("material-ui/Drawer/Drawer");
var Hidden                  = require("material-ui/Hidden/Hidden");
var ListItem                = require("material-ui/List/ListItem");
var MenuItem                = require("material-ui/Menu/MenuItem");
var MenuList                = require("material-ui/Menu/MenuList");
var Select                  = require("material-ui/Select/Select");
var Switch                  = require("material-ui/Switch/Switch");
var Common                  = require("material-ui/colors/common");
var Indigo                  = require("material-ui/colors/indigo");
var Orange                  = require("material-ui/colors/orange");
var Purple                  = require("material-ui/colors/purple");
var Yellow                  = require("material-ui/colors/yellow");
var CardMedia               = require("material-ui/Card/CardMedia");
var FormGroup               = require("material-ui/Form/FormGroup");
var FormLabel               = require("material-ui/Form/FormLabel");
var TableRow                = require("material-ui/Table/TableRow");
var CardHeader              = require("material-ui/Card/CardHeader");
var Divider                 = require("material-ui/Divider/Divider");
var Popover                 = require("material-ui/Popover/Popover");
var Stepper                 = require("material-ui/Stepper/Stepper");
var SvgIcon                 = require("material-ui/SvgIcon/SvgIcon");
var TableBody               = require("material-ui/Table/TableBody");
var TableCell               = require("material-ui/Table/TableCell");
var TableHead               = require("material-ui/Table/TableHead");
var Toolbar                 = require("material-ui/Toolbar/Toolbar");
var Tooltip                 = require("material-ui/Tooltip/Tooltip");
var BlueGrey                = require("material-ui/colors/blueGrey");
var CardActions             = require("material-ui/Card/CardActions");
var CardContent             = require("material-ui/Card/CardContent");
var FormControl             = require("material-ui/Form/FormControl");
var InputLabel              = require("material-ui/Input/InputLabel");
var RadioGroup              = require("material-ui/Radio/RadioGroup");
var LightBlue               = require("material-ui/colors/lightBlue");
var Fade                    = require("material-ui/transitions/Fade");
var Grow                    = require("material-ui/transitions/Grow");
var Checkbox                = require("material-ui/Checkbox/Checkbox");
var GridList                = require("material-ui/GridList/GridList");
var ListItemIcon            = require("material-ui/List/ListItemIcon");
var ListItemText            = require("material-ui/List/ListItemText");
var Snackbar                = require("material-ui/Snackbar/Snackbar");
var StepLabel               = require("material-ui/Stepper/StepLabel");
var TableFooter             = require("material-ui/Table/TableFooter");
var DeepOrange              = require("material-ui/colors/deepOrange");
var DeepPurple              = require("material-ui/colors/deepPurple");
var LightGreen              = require("material-ui/colors/lightGreen");
var Slide                   = require("material-ui/transitions/Slide");
var DialogTitle             = require("material-ui/Dialog/DialogTitle");
var ListSubheader           = require("material-ui/List/ListSubheader");
var StepButton              = require("material-ui/Stepper/StepButton");
var FormHelperText          = require("material-ui/Form/FormHelperText");
var ListItemAvatar          = require("material-ui/List/ListItemAvatar");
var StepContent             = require("material-ui/Stepper/StepContent");
var TextField               = require("material-ui/TextField/TextField");
var DialogActions           = require("material-ui/Dialog/DialogActions");
var DialogContent           = require("material-ui/Dialog/DialogContent");
var InputAdornment          = require("material-ui/Input/InputAdornment");
var TableSortLabel          = require("material-ui/Table/TableSortLabel");
var Collapse                = require("material-ui/transitions/Collapse");
var ButtonBase              = require("material-ui/ButtonBase/ButtonBase");
var FormControlLabel        = require("material-ui/Form/FormControlLabel");
var GridListTile            = require("material-ui/GridList/GridListTile");
var IconButton              = require("material-ui/IconButton/IconButton");
var TablePagination         = require("material-ui/Table/TablePagination");
var Typography              = require("material-ui/Typography/Typography");
var LinearProgress          = require("material-ui/Progress/LinearProgress");
var MuiThemeProvider        = require("material-ui/styles/MuiThemeProvider");
var ClickAwayListener       = require("material-ui/utils/ClickAwayListener");
var DialogContentText       = require("material-ui/Dialog/DialogContentText");
var GridListTileBar         = require("material-ui/GridList/GridListTileBar");
var SnackbarContent         = require("material-ui/Snackbar/SnackbarContent");
var CircularProgress        = require("material-ui/Progress/CircularProgress");
var MobileStepper           = require("material-ui/MobileStepper/MobileStepper");
var ListItemSecondaryAction = require("material-ui/List/ListItemSecondaryAction");
var ExpansionPanel          = require("material-ui/ExpansionPanel/ExpansionPanel");
var BottomNavigation        = require("material-ui/BottomNavigation/BottomNavigation");
var ExpansionPanelActions   = require("material-ui/ExpansionPanel/ExpansionPanelActions");
var ExpansionPanelDetails   = require("material-ui/ExpansionPanel/ExpansionPanelDetails");
var ExpansionPanelSummary   = require("material-ui/ExpansionPanel/ExpansionPanelSummary");
var BottomNavigationButton  = require("material-ui/BottomNavigation/BottomNavigationButton");

function unwrapValue(param) {
  var variant = param[0];
  if (variant !== 737456202) {
    if (variant >= 770676513) {
      throw [
            Caml_builtin_exceptions.assert_failure,
            [
              "MaterialUi.re",
              12,
              16
            ]
          ];
    } else {
      return param[1];
    }
  } else {
    return Js_boolean.to_js_boolean(param[1]);
  }
}

function optionMap(fn, option) {
  if (option) {
    return /* Some */[Curry._1(fn, option[0])];
  } else {
    return /* None */0;
  }
}

function toString(direction) {
  if (direction !== 0) {
    return "rtl";
  } else {
    return "ltr";
  }
}

function fromString(direction) {
  switch (direction) {
    case "ltr" : 
        return /* Ltr */0;
    case "rtl" : 
        return /* Rtl */1;
    default:
      throw [
            Caml_builtin_exceptions.failure,
            "Unknown direction: " + direction
          ];
  }
}

var Direction = /* module */[
  /* toString */toString,
  /* fromString */fromString
];

var Spacing = /* module */[];

var Easing = /* module */[];

var Duration = /* module */[];

var Transitions = /* module */[
  /* Easing */Easing,
  /* Duration */Duration
];

function tFromJs(param) {
  return /* record */[
          /* direction */param.direction,
          /* palette */param.palette,
          /* typography */param.typography,
          /* mixins */param.mixins,
          /* breakpoints */param.breakpoints,
          /* shadows */param.shadows,
          /* transitions */param.transitions,
          /* spacing */param.spacing,
          /* zIndex */param.zIndex
        ];
}

var component = ReasonReact.statelessComponent("WithStyles");

function make(styles, stylesWithTheme, render, children) {
  var tmp;
  if (styles) {
    tmp = styles[0];
  } else if (stylesWithTheme) {
    var stylesWithTheme$1 = stylesWithTheme[0];
    tmp = (function (theme) {
        return Curry._1(stylesWithTheme$1, tFromJs(theme));
      });
  } else {
    tmp = { };
  }
  var wrapper = Styles.withStyles(tmp);
  return ReasonReact.wrapJsForReason(wrapper(ReasonReact.wrapReasonForJs(component, (function (jsProps) {
                        var render = jsProps.render;
                        var classes = jsProps.classes;
                        var newrecord = component.slice();
                        newrecord[/* render */9] = (function () {
                            return Curry._1(render, classes);
                          });
                        return newrecord;
                      }))), {
              render: render
            }, children);
}

var contrastDefaultColor = BlueGrey.default["contrastDefaultColor"];

var a700 = BlueGrey.default["A700"];

var a400 = BlueGrey.default["A400"];

var a200 = BlueGrey.default["A200"];

var a100 = BlueGrey.default["A100"];

var c900 = BlueGrey.default["900"];

var c800 = BlueGrey.default["800"];

var c700 = BlueGrey.default["700"];

var c600 = BlueGrey.default["600"];

var c500 = BlueGrey.default["500"];

var c400 = BlueGrey.default["400"];

var c300 = BlueGrey.default["300"];

var c200 = BlueGrey.default["200"];

var c100 = BlueGrey.default["100"];

var c50 = BlueGrey.default["50"];

var BlueGrey$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor,
  /* a700 */a700,
  /* a400 */a400,
  /* a200 */a200,
  /* a100 */a100,
  /* c900 */c900,
  /* c800 */c800,
  /* c700 */c700,
  /* c600 */c600,
  /* c500 */c500,
  /* c400 */c400,
  /* c300 */c300,
  /* c200 */c200,
  /* c100 */c100,
  /* c50 */c50
];

var contrastDefaultColor$1 = Grey.default["contrastDefaultColor"];

var a700$1 = Grey.default["A700"];

var a400$1 = Grey.default["A400"];

var a200$1 = Grey.default["A200"];

var a100$1 = Grey.default["A100"];

var c900$1 = Grey.default["900"];

var c800$1 = Grey.default["800"];

var c700$1 = Grey.default["700"];

var c600$1 = Grey.default["600"];

var c500$1 = Grey.default["500"];

var c400$1 = Grey.default["400"];

var c300$1 = Grey.default["300"];

var c200$1 = Grey.default["200"];

var c100$1 = Grey.default["100"];

var c50$1 = Grey.default["50"];

var Grey$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$1,
  /* a700 */a700$1,
  /* a400 */a400$1,
  /* a200 */a200$1,
  /* a100 */a100$1,
  /* c900 */c900$1,
  /* c800 */c800$1,
  /* c700 */c700$1,
  /* c600 */c600$1,
  /* c500 */c500$1,
  /* c400 */c400$1,
  /* c300 */c300$1,
  /* c200 */c200$1,
  /* c100 */c100$1,
  /* c50 */c50$1
];

var contrastDefaultColor$2 = Brown.default["contrastDefaultColor"];

var a700$2 = Brown.default["A700"];

var a400$2 = Brown.default["A400"];

var a200$2 = Brown.default["A200"];

var a100$2 = Brown.default["A100"];

var c900$2 = Brown.default["900"];

var c800$2 = Brown.default["800"];

var c700$2 = Brown.default["700"];

var c600$2 = Brown.default["600"];

var c500$2 = Brown.default["500"];

var c400$2 = Brown.default["400"];

var c300$2 = Brown.default["300"];

var c200$2 = Brown.default["200"];

var c100$2 = Brown.default["100"];

var c50$2 = Brown.default["50"];

var Brown$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$2,
  /* a700 */a700$2,
  /* a400 */a400$2,
  /* a200 */a200$2,
  /* a100 */a100$2,
  /* c900 */c900$2,
  /* c800 */c800$2,
  /* c700 */c700$2,
  /* c600 */c600$2,
  /* c500 */c500$2,
  /* c400 */c400$2,
  /* c300 */c300$2,
  /* c200 */c200$2,
  /* c100 */c100$2,
  /* c50 */c50$2
];

var contrastDefaultColor$3 = DeepOrange.default["contrastDefaultColor"];

var a700$3 = DeepOrange.default["A700"];

var a400$3 = DeepOrange.default["A400"];

var a200$3 = DeepOrange.default["A200"];

var a100$3 = DeepOrange.default["A100"];

var c900$3 = DeepOrange.default["900"];

var c800$3 = DeepOrange.default["800"];

var c700$3 = DeepOrange.default["700"];

var c600$3 = DeepOrange.default["600"];

var c500$3 = DeepOrange.default["500"];

var c400$3 = DeepOrange.default["400"];

var c300$3 = DeepOrange.default["300"];

var c200$3 = DeepOrange.default["200"];

var c100$3 = DeepOrange.default["100"];

var c50$3 = DeepOrange.default["50"];

var DeepOrange$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$3,
  /* a700 */a700$3,
  /* a400 */a400$3,
  /* a200 */a200$3,
  /* a100 */a100$3,
  /* c900 */c900$3,
  /* c800 */c800$3,
  /* c700 */c700$3,
  /* c600 */c600$3,
  /* c500 */c500$3,
  /* c400 */c400$3,
  /* c300 */c300$3,
  /* c200 */c200$3,
  /* c100 */c100$3,
  /* c50 */c50$3
];

var contrastDefaultColor$4 = Orange.default["contrastDefaultColor"];

var a700$4 = Orange.default["A700"];

var a400$4 = Orange.default["A400"];

var a200$4 = Orange.default["A200"];

var a100$4 = Orange.default["A100"];

var c900$4 = Orange.default["900"];

var c800$4 = Orange.default["800"];

var c700$4 = Orange.default["700"];

var c600$4 = Orange.default["600"];

var c500$4 = Orange.default["500"];

var c400$4 = Orange.default["400"];

var c300$4 = Orange.default["300"];

var c200$4 = Orange.default["200"];

var c100$4 = Orange.default["100"];

var c50$4 = Orange.default["50"];

var Orange$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$4,
  /* a700 */a700$4,
  /* a400 */a400$4,
  /* a200 */a200$4,
  /* a100 */a100$4,
  /* c900 */c900$4,
  /* c800 */c800$4,
  /* c700 */c700$4,
  /* c600 */c600$4,
  /* c500 */c500$4,
  /* c400 */c400$4,
  /* c300 */c300$4,
  /* c200 */c200$4,
  /* c100 */c100$4,
  /* c50 */c50$4
];

var contrastDefaultColor$5 = Amber.default["contrastDefaultColor"];

var a700$5 = Amber.default["A700"];

var a400$5 = Amber.default["A400"];

var a200$5 = Amber.default["A200"];

var a100$5 = Amber.default["A100"];

var c900$5 = Amber.default["900"];

var c800$5 = Amber.default["800"];

var c700$5 = Amber.default["700"];

var c600$5 = Amber.default["600"];

var c500$5 = Amber.default["500"];

var c400$5 = Amber.default["400"];

var c300$5 = Amber.default["300"];

var c200$5 = Amber.default["200"];

var c100$5 = Amber.default["100"];

var c50$5 = Amber.default["50"];

var Amber$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$5,
  /* a700 */a700$5,
  /* a400 */a400$5,
  /* a200 */a200$5,
  /* a100 */a100$5,
  /* c900 */c900$5,
  /* c800 */c800$5,
  /* c700 */c700$5,
  /* c600 */c600$5,
  /* c500 */c500$5,
  /* c400 */c400$5,
  /* c300 */c300$5,
  /* c200 */c200$5,
  /* c100 */c100$5,
  /* c50 */c50$5
];

var contrastDefaultColor$6 = Yellow.default["contrastDefaultColor"];

var a700$6 = Yellow.default["A700"];

var a400$6 = Yellow.default["A400"];

var a200$6 = Yellow.default["A200"];

var a100$6 = Yellow.default["A100"];

var c900$6 = Yellow.default["900"];

var c800$6 = Yellow.default["800"];

var c700$6 = Yellow.default["700"];

var c600$6 = Yellow.default["600"];

var c500$6 = Yellow.default["500"];

var c400$6 = Yellow.default["400"];

var c300$6 = Yellow.default["300"];

var c200$6 = Yellow.default["200"];

var c100$6 = Yellow.default["100"];

var c50$6 = Yellow.default["50"];

var Yellow$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$6,
  /* a700 */a700$6,
  /* a400 */a400$6,
  /* a200 */a200$6,
  /* a100 */a100$6,
  /* c900 */c900$6,
  /* c800 */c800$6,
  /* c700 */c700$6,
  /* c600 */c600$6,
  /* c500 */c500$6,
  /* c400 */c400$6,
  /* c300 */c300$6,
  /* c200 */c200$6,
  /* c100 */c100$6,
  /* c50 */c50$6
];

var contrastDefaultColor$7 = Lime.default["contrastDefaultColor"];

var a700$7 = Lime.default["A700"];

var a400$7 = Lime.default["A400"];

var a200$7 = Lime.default["A200"];

var a100$7 = Lime.default["A100"];

var c900$7 = Lime.default["900"];

var c800$7 = Lime.default["800"];

var c700$7 = Lime.default["700"];

var c600$7 = Lime.default["600"];

var c500$7 = Lime.default["500"];

var c400$7 = Lime.default["400"];

var c300$7 = Lime.default["300"];

var c200$7 = Lime.default["200"];

var c100$7 = Lime.default["100"];

var c50$7 = Lime.default["50"];

var Lime$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$7,
  /* a700 */a700$7,
  /* a400 */a400$7,
  /* a200 */a200$7,
  /* a100 */a100$7,
  /* c900 */c900$7,
  /* c800 */c800$7,
  /* c700 */c700$7,
  /* c600 */c600$7,
  /* c500 */c500$7,
  /* c400 */c400$7,
  /* c300 */c300$7,
  /* c200 */c200$7,
  /* c100 */c100$7,
  /* c50 */c50$7
];

var contrastDefaultColor$8 = LightGreen.default["contrastDefaultColor"];

var a700$8 = LightGreen.default["A700"];

var a400$8 = LightGreen.default["A400"];

var a200$8 = LightGreen.default["A200"];

var a100$8 = LightGreen.default["A100"];

var c900$8 = LightGreen.default["900"];

var c800$8 = LightGreen.default["800"];

var c700$8 = LightGreen.default["700"];

var c600$8 = LightGreen.default["600"];

var c500$8 = LightGreen.default["500"];

var c400$8 = LightGreen.default["400"];

var c300$8 = LightGreen.default["300"];

var c200$8 = LightGreen.default["200"];

var c100$8 = LightGreen.default["100"];

var c50$8 = LightGreen.default["50"];

var LightGreen$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$8,
  /* a700 */a700$8,
  /* a400 */a400$8,
  /* a200 */a200$8,
  /* a100 */a100$8,
  /* c900 */c900$8,
  /* c800 */c800$8,
  /* c700 */c700$8,
  /* c600 */c600$8,
  /* c500 */c500$8,
  /* c400 */c400$8,
  /* c300 */c300$8,
  /* c200 */c200$8,
  /* c100 */c100$8,
  /* c50 */c50$8
];

var contrastDefaultColor$9 = Green.default["contrastDefaultColor"];

var a700$9 = Green.default["A700"];

var a400$9 = Green.default["A400"];

var a200$9 = Green.default["A200"];

var a100$9 = Green.default["A100"];

var c900$9 = Green.default["900"];

var c800$9 = Green.default["800"];

var c700$9 = Green.default["700"];

var c600$9 = Green.default["600"];

var c500$9 = Green.default["500"];

var c400$9 = Green.default["400"];

var c300$9 = Green.default["300"];

var c200$9 = Green.default["200"];

var c100$9 = Green.default["100"];

var c50$9 = Green.default["50"];

var Green$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$9,
  /* a700 */a700$9,
  /* a400 */a400$9,
  /* a200 */a200$9,
  /* a100 */a100$9,
  /* c900 */c900$9,
  /* c800 */c800$9,
  /* c700 */c700$9,
  /* c600 */c600$9,
  /* c500 */c500$9,
  /* c400 */c400$9,
  /* c300 */c300$9,
  /* c200 */c200$9,
  /* c100 */c100$9,
  /* c50 */c50$9
];

var contrastDefaultColor$10 = Teal.default["contrastDefaultColor"];

var a700$10 = Teal.default["A700"];

var a400$10 = Teal.default["A400"];

var a200$10 = Teal.default["A200"];

var a100$10 = Teal.default["A100"];

var c900$10 = Teal.default["900"];

var c800$10 = Teal.default["800"];

var c700$10 = Teal.default["700"];

var c600$10 = Teal.default["600"];

var c500$10 = Teal.default["500"];

var c400$10 = Teal.default["400"];

var c300$10 = Teal.default["300"];

var c200$10 = Teal.default["200"];

var c100$10 = Teal.default["100"];

var c50$10 = Teal.default["50"];

var Teal$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$10,
  /* a700 */a700$10,
  /* a400 */a400$10,
  /* a200 */a200$10,
  /* a100 */a100$10,
  /* c900 */c900$10,
  /* c800 */c800$10,
  /* c700 */c700$10,
  /* c600 */c600$10,
  /* c500 */c500$10,
  /* c400 */c400$10,
  /* c300 */c300$10,
  /* c200 */c200$10,
  /* c100 */c100$10,
  /* c50 */c50$10
];

var contrastDefaultColor$11 = Cyan.default["contrastDefaultColor"];

var a700$11 = Cyan.default["A700"];

var a400$11 = Cyan.default["A400"];

var a200$11 = Cyan.default["A200"];

var a100$11 = Cyan.default["A100"];

var c900$11 = Cyan.default["900"];

var c800$11 = Cyan.default["800"];

var c700$11 = Cyan.default["700"];

var c600$11 = Cyan.default["600"];

var c500$11 = Cyan.default["500"];

var c400$11 = Cyan.default["400"];

var c300$11 = Cyan.default["300"];

var c200$11 = Cyan.default["200"];

var c100$11 = Cyan.default["100"];

var c50$11 = Cyan.default["50"];

var Cyan$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$11,
  /* a700 */a700$11,
  /* a400 */a400$11,
  /* a200 */a200$11,
  /* a100 */a100$11,
  /* c900 */c900$11,
  /* c800 */c800$11,
  /* c700 */c700$11,
  /* c600 */c600$11,
  /* c500 */c500$11,
  /* c400 */c400$11,
  /* c300 */c300$11,
  /* c200 */c200$11,
  /* c100 */c100$11,
  /* c50 */c50$11
];

var contrastDefaultColor$12 = LightBlue.default["contrastDefaultColor"];

var a700$12 = LightBlue.default["A700"];

var a400$12 = LightBlue.default["A400"];

var a200$12 = LightBlue.default["A200"];

var a100$12 = LightBlue.default["A100"];

var c900$12 = LightBlue.default["900"];

var c800$12 = LightBlue.default["800"];

var c700$12 = LightBlue.default["700"];

var c600$12 = LightBlue.default["600"];

var c500$12 = LightBlue.default["500"];

var c400$12 = LightBlue.default["400"];

var c300$12 = LightBlue.default["300"];

var c200$12 = LightBlue.default["200"];

var c100$12 = LightBlue.default["100"];

var c50$12 = LightBlue.default["50"];

var LightBlue$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$12,
  /* a700 */a700$12,
  /* a400 */a400$12,
  /* a200 */a200$12,
  /* a100 */a100$12,
  /* c900 */c900$12,
  /* c800 */c800$12,
  /* c700 */c700$12,
  /* c600 */c600$12,
  /* c500 */c500$12,
  /* c400 */c400$12,
  /* c300 */c300$12,
  /* c200 */c200$12,
  /* c100 */c100$12,
  /* c50 */c50$12
];

var contrastDefaultColor$13 = Blue.default["contrastDefaultColor"];

var a700$13 = Blue.default["A700"];

var a400$13 = Blue.default["A400"];

var a200$13 = Blue.default["A200"];

var a100$13 = Blue.default["A100"];

var c900$13 = Blue.default["900"];

var c800$13 = Blue.default["800"];

var c700$13 = Blue.default["700"];

var c600$13 = Blue.default["600"];

var c500$13 = Blue.default["500"];

var c400$13 = Blue.default["400"];

var c300$13 = Blue.default["300"];

var c200$13 = Blue.default["200"];

var c100$13 = Blue.default["100"];

var c50$13 = Blue.default["50"];

var Blue$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$13,
  /* a700 */a700$13,
  /* a400 */a400$13,
  /* a200 */a200$13,
  /* a100 */a100$13,
  /* c900 */c900$13,
  /* c800 */c800$13,
  /* c700 */c700$13,
  /* c600 */c600$13,
  /* c500 */c500$13,
  /* c400 */c400$13,
  /* c300 */c300$13,
  /* c200 */c200$13,
  /* c100 */c100$13,
  /* c50 */c50$13
];

var contrastDefaultColor$14 = Indigo.default["contrastDefaultColor"];

var a700$14 = Indigo.default["A700"];

var a400$14 = Indigo.default["A400"];

var a200$14 = Indigo.default["A200"];

var a100$14 = Indigo.default["A100"];

var c900$14 = Indigo.default["900"];

var c800$14 = Indigo.default["800"];

var c700$14 = Indigo.default["700"];

var c600$14 = Indigo.default["600"];

var c500$14 = Indigo.default["500"];

var c400$14 = Indigo.default["400"];

var c300$14 = Indigo.default["300"];

var c200$14 = Indigo.default["200"];

var c100$14 = Indigo.default["100"];

var c50$14 = Indigo.default["50"];

var Indigo$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$14,
  /* a700 */a700$14,
  /* a400 */a400$14,
  /* a200 */a200$14,
  /* a100 */a100$14,
  /* c900 */c900$14,
  /* c800 */c800$14,
  /* c700 */c700$14,
  /* c600 */c600$14,
  /* c500 */c500$14,
  /* c400 */c400$14,
  /* c300 */c300$14,
  /* c200 */c200$14,
  /* c100 */c100$14,
  /* c50 */c50$14
];

var contrastDefaultColor$15 = DeepPurple.default["contrastDefaultColor"];

var a700$15 = DeepPurple.default["A700"];

var a400$15 = DeepPurple.default["A400"];

var a200$15 = DeepPurple.default["A200"];

var a100$15 = DeepPurple.default["A100"];

var c900$15 = DeepPurple.default["900"];

var c800$15 = DeepPurple.default["800"];

var c700$15 = DeepPurple.default["700"];

var c600$15 = DeepPurple.default["600"];

var c500$15 = DeepPurple.default["500"];

var c400$15 = DeepPurple.default["400"];

var c300$15 = DeepPurple.default["300"];

var c200$15 = DeepPurple.default["200"];

var c100$15 = DeepPurple.default["100"];

var c50$15 = DeepPurple.default["50"];

var DeepPurple$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$15,
  /* a700 */a700$15,
  /* a400 */a400$15,
  /* a200 */a200$15,
  /* a100 */a100$15,
  /* c900 */c900$15,
  /* c800 */c800$15,
  /* c700 */c700$15,
  /* c600 */c600$15,
  /* c500 */c500$15,
  /* c400 */c400$15,
  /* c300 */c300$15,
  /* c200 */c200$15,
  /* c100 */c100$15,
  /* c50 */c50$15
];

var contrastDefaultColor$16 = Purple.default["contrastDefaultColor"];

var a700$16 = Purple.default["A700"];

var a400$16 = Purple.default["A400"];

var a200$16 = Purple.default["A200"];

var a100$16 = Purple.default["A100"];

var c900$16 = Purple.default["900"];

var c800$16 = Purple.default["800"];

var c700$16 = Purple.default["700"];

var c600$16 = Purple.default["600"];

var c500$16 = Purple.default["500"];

var c400$16 = Purple.default["400"];

var c300$16 = Purple.default["300"];

var c200$16 = Purple.default["200"];

var c100$16 = Purple.default["100"];

var c50$16 = Purple.default["50"];

var Purple$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$16,
  /* a700 */a700$16,
  /* a400 */a400$16,
  /* a200 */a200$16,
  /* a100 */a100$16,
  /* c900 */c900$16,
  /* c800 */c800$16,
  /* c700 */c700$16,
  /* c600 */c600$16,
  /* c500 */c500$16,
  /* c400 */c400$16,
  /* c300 */c300$16,
  /* c200 */c200$16,
  /* c100 */c100$16,
  /* c50 */c50$16
];

var contrastDefaultColor$17 = Pink.default["contrastDefaultColor"];

var a700$17 = Pink.default["A700"];

var a400$17 = Pink.default["A400"];

var a200$17 = Pink.default["A200"];

var a100$17 = Pink.default["A100"];

var c900$17 = Pink.default["900"];

var c800$17 = Pink.default["800"];

var c700$17 = Pink.default["700"];

var c600$17 = Pink.default["600"];

var c500$17 = Pink.default["500"];

var c400$17 = Pink.default["400"];

var c300$17 = Pink.default["300"];

var c200$17 = Pink.default["200"];

var c100$17 = Pink.default["100"];

var c50$17 = Pink.default["50"];

var Pink$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$17,
  /* a700 */a700$17,
  /* a400 */a400$17,
  /* a200 */a200$17,
  /* a100 */a100$17,
  /* c900 */c900$17,
  /* c800 */c800$17,
  /* c700 */c700$17,
  /* c600 */c600$17,
  /* c500 */c500$17,
  /* c400 */c400$17,
  /* c300 */c300$17,
  /* c200 */c200$17,
  /* c100 */c100$17,
  /* c50 */c50$17
];

var contrastDefaultColor$18 = Red.default["contrastDefaultColor"];

var a700$18 = Red.default["A700"];

var a400$18 = Red.default["A400"];

var a200$18 = Red.default["A200"];

var a100$18 = Red.default["A100"];

var c900$18 = Red.default["900"];

var c800$18 = Red.default["800"];

var c700$18 = Red.default["700"];

var c600$18 = Red.default["600"];

var c500$18 = Red.default["500"];

var c400$18 = Red.default["400"];

var c300$18 = Red.default["300"];

var c200$18 = Red.default["200"];

var c100$18 = Red.default["100"];

var c50$18 = Red.default["50"];

var Red$1 = /* module */[
  /* contrastDefaultColor */contrastDefaultColor$18,
  /* a700 */a700$18,
  /* a400 */a400$18,
  /* a200 */a200$18,
  /* a100 */a100$18,
  /* c900 */c900$18,
  /* c800 */c800$18,
  /* c700 */c700$18,
  /* c600 */c600$18,
  /* c500 */c500$18,
  /* c400 */c400$18,
  /* c300 */c300$18,
  /* c200 */c200$18,
  /* c100 */c100$18,
  /* c50 */c50$18
];

var lightWhite = Common.default["lightWhite"];

var darkWhite = Common.default["darkWhite"];

var fullWhite = Common.default["fullWhite"];

var faintBlack = Common.default["faintBlack"];

var minBlack = Common.default["minBlack"];

var lightBlack = Common.default["lightBlack"];

var darkBlack = Common.default["darkBlack"];

var fullBlack = Common.default["fullBlack"];

var transparent = Common.default["transparent"];

var white = Common.default["white"];

var black = Common.default["black"];

var Common$1 = /* module */[
  /* lightWhite */lightWhite,
  /* darkWhite */darkWhite,
  /* fullWhite */fullWhite,
  /* faintBlack */faintBlack,
  /* minBlack */minBlack,
  /* lightBlack */lightBlack,
  /* darkBlack */darkBlack,
  /* fullBlack */fullBlack,
  /* transparent */transparent,
  /* white */white,
  /* black */black
];

var Colors = /* module */[
  /* BlueGrey */BlueGrey$1,
  /* Grey */Grey$1,
  /* Brown */Brown$1,
  /* DeepOrange */DeepOrange$1,
  /* Orange */Orange$1,
  /* Amber */Amber$1,
  /* Yellow */Yellow$1,
  /* Lime */Lime$1,
  /* LightGreen */LightGreen$1,
  /* Green */Green$1,
  /* Teal */Teal$1,
  /* Cyan */Cyan$1,
  /* LightBlue */LightBlue$1,
  /* Blue */Blue$1,
  /* Indigo */Indigo$1,
  /* DeepPurple */DeepPurple$1,
  /* Purple */Purple$1,
  /* Pink */Pink$1,
  /* Red */Red$1,
  /* Common */Common$1
];

function to_string(param) {
  if (param !== 0) {
    return "none";
  } else {
    return "dense";
  }
}

var Margin = /* module */[/* to_string */to_string];

function to_string$1(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "select";
    case 2 : 
        return "selectMenu";
    case 3 : 
        return "disabled";
    case 4 : 
        return "icon";
    
  }
}

function to_obj(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$1(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes = /* module */[
  /* to_string */to_string$1,
  /* to_obj */to_obj
];

function make$1(value, renderValue, mMenuProps, multiple, $$native, input, displayEmpty, autoWidth, theme, classes, autoComplete, autoFocus, className, defaultValue, disabled, disableUnderline, endAdornment, error, fullWidth, id, inputComponent, inputProps, inputRef, margin, multiline, name, readOnly, onBlur, onChange, onClean, onDirty, onFocus, onKeyDown, onKeyUp, placeholder, rows, rowsMax, startAdornment, type_, children) {
  return ReasonReact.wrapJsForReason(Select.default, {
              value: Js_null_undefined.from_opt(optionMap(unwrapValue, value)),
              renderValue: Js_null_undefined.from_opt(renderValue),
              MenuProps: Js_null_undefined.from_opt(mMenuProps),
              multiple: Js_boolean.to_js_boolean(multiple),
              native: Js_boolean.to_js_boolean($$native),
              input: input,
              displayEmpty: Js_boolean.to_js_boolean(displayEmpty),
              autoWidth: Js_boolean.to_js_boolean(autoWidth),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj, classes)),
              autoComplete: Js_null_undefined.from_opt(autoComplete),
              autoFocus: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, autoFocus)),
              className: Js_null_undefined.from_opt(className),
              defaultValue: Js_null_undefined.from_opt(optionMap(unwrapValue, defaultValue)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              disableUnderline: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disableUnderline)),
              endAdornment: Js_null_undefined.from_opt(endAdornment),
              error: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, error)),
              fullWidth: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, fullWidth)),
              id: Js_null_undefined.from_opt(id),
              inputComponent: Js_null_undefined.from_opt(optionMap(unwrapValue, inputComponent)),
              inputProps: Js_null_undefined.from_opt(inputProps),
              inputRef: Js_null_undefined.from_opt(inputRef),
              margin: Js_null_undefined.from_opt(optionMap(to_string, margin)),
              multiline: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, multiline)),
              name: Js_null_undefined.from_opt(name),
              readOnly: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, readOnly)),
              onBlur: Js_null_undefined.from_opt(onBlur),
              onChange: Js_null_undefined.from_opt(onChange),
              onClean: Js_null_undefined.from_opt(onClean),
              onDirty: Js_null_undefined.from_opt(onDirty),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              placeholder: Js_null_undefined.from_opt(placeholder),
              rows: Js_null_undefined.from_opt(optionMap(unwrapValue, rows)),
              rowsMax: Js_null_undefined.from_opt(optionMap(unwrapValue, rowsMax)),
              startAdornment: Js_null_undefined.from_opt(startAdornment),
              type: Js_null_undefined.from_opt(type_)
            }, children);
}

var Select$1 = /* module */[
  /* Margin */Margin,
  /* Classes */Classes,
  /* make */make$1
];

function to_string$2(param) {
  if (param !== 0) {
    return "end";
  } else {
    return "start";
  }
}

var Position = /* module */[/* to_string */to_string$2];

function to_string$3(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "positionStart";
    case 2 : 
        return "positionEnd";
    
  }
}

function to_obj$1(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$3(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$1 = /* module */[
  /* to_string */to_string$3,
  /* to_obj */to_obj$1
];

function make$2(position, disableTypography, component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(InputAdornment.default, {
              position: to_string$2(position),
              disableTypography: Js_boolean.to_js_boolean(disableTypography),
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$1, classes))
            }, children);
}

var InputAdornment$1 = /* module */[
  /* Position */Position,
  /* Classes */Classes$1,
  /* make */make$2
];

function to_string$4() {
  return "root";
}

function to_obj$2(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$2 = /* module */[
  /* to_string */to_string$4,
  /* to_obj */to_obj$2
];

function make$3(value, showLabels, onChange, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(BottomNavigation.default, {
              value: value,
              showLabels: Js_boolean.to_js_boolean(showLabels),
              onChange: Js_null_undefined.from_opt(onChange),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$2, classes))
            }, children);
}

var BottomNavigation$1 = /* module */[
  /* Classes */Classes$2,
  /* make */make$3
];

function to_string$5(param) {
  if (param !== 0) {
    return "bottom";
  } else {
    return "top";
  }
}

var TitlePosition = /* module */[/* to_string */to_string$5];

function to_string$6(param) {
  if (param !== 0) {
    return "right";
  } else {
    return "left";
  }
}

var ActionPosition = /* module */[/* to_string */to_string$6];

function to_string$7(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "rootBottom";
    case 2 : 
        return "rootTop";
    case 3 : 
        return "rootWithSubtitle";
    case 4 : 
        return "titleWrap";
    case 5 : 
        return "titleWrapActionLeft";
    case 6 : 
        return "titleWrapActionRight";
    case 7 : 
        return "title";
    case 8 : 
        return "subtitle";
    case 9 : 
        return "actionIconPositionLeft";
    case 10 : 
        return "childImg";
    
  }
}

function to_obj$3(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$7(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$3 = /* module */[
  /* to_string */to_string$7,
  /* to_obj */to_obj$3
];

function make$4(titlePosition, title, subtitle, className, actionPosition, actionIcon, theme, classes, children) {
  return ReasonReact.wrapJsForReason(GridListTileBar.default, {
              titlePosition: Js_null_undefined.from_opt(optionMap(to_string$5, titlePosition)),
              title: title,
              subtitle: Js_null_undefined.from_opt(subtitle),
              className: Js_null_undefined.from_opt(className),
              actionPosition: Js_null_undefined.from_opt(optionMap(to_string$6, actionPosition)),
              actionIcon: Js_null_undefined.from_opt(actionIcon),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$3, classes))
            }, children);
}

var GridListTileBar$1 = /* module */[
  /* TitlePosition */TitlePosition,
  /* ActionPosition */ActionPosition,
  /* Classes */Classes$3,
  /* make */make$4
];

function to_string$8() {
  return "root";
}

function to_obj$4(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$4 = /* module */[
  /* to_string */to_string$8,
  /* to_obj */to_obj$4
];

function make$5(component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(TableBody.default, {
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$4, classes))
            }, children);
}

var TableBody$1 = /* module */[
  /* Classes */Classes$4,
  /* make */make$5
];

function make$6(timeout, style, onExit, onEntering, onEnter, in_, appear, theme, children) {
  return ReasonReact.wrapJsForReason(Fade.default, {
              timeout: timeout,
              style: Js_null_undefined.from_opt(style),
              onExit: Js_null_undefined.from_opt(onExit),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEnter: Js_null_undefined.from_opt(onEnter),
              in: Js_boolean.to_js_boolean(in_),
              appear: Js_boolean.to_js_boolean(appear),
              theme: theme
            }, children);
}

var Fade$1 = /* module */[/* make */make$6];

function to_string$9(param) {
  if (param.tag) {
    return "rootMedia";
  } else {
    return "root";
  }
}

function to_obj$5(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$9(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$5 = /* module */[
  /* to_string */to_string$9,
  /* to_obj */to_obj$5
];

function make$7(component, style, src, image, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(CardMedia.default, {
              component: component,
              style: Js_null_undefined.from_opt(style),
              src: Js_null_undefined.from_opt(src),
              image: Js_null_undefined.from_opt(image),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$5, classes))
            }, children);
}

var CardMedia$1 = /* module */[
  /* Classes */Classes$5,
  /* make */make$7
];

function to_string$10(param) {
  if (param.tag) {
    return "action";
  } else {
    return "root";
  }
}

function to_obj$6(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$10(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$6 = /* module */[
  /* to_string */to_string$10,
  /* to_obj */to_obj$6
];

function make$8(className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(ExpansionPanelActions.default, {
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$6, classes))
            }, children);
}

var ExpansionPanelActions$1 = /* module */[
  /* Classes */Classes$6,
  /* make */make$8
];

function to_string$11(param) {
  if (param.tag) {
    return "icon";
  } else {
    return "root";
  }
}

function to_obj$7(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$11(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$7 = /* module */[
  /* to_string */to_string$11,
  /* to_obj */to_obj$7
];

function make$9(className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(ListItemAvatar.default, {
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$7, classes))
            }, children);
}

var ListItemAvatar$1 = /* module */[
  /* Classes */Classes$7,
  /* make */make$9
];

function to_string$12(param) {
  switch (param) {
    case 0 : 
        return "default";
    case 1 : 
        return "primary";
    case 2 : 
        return "accent";
    
  }
}

var Color = /* module */[/* to_string */to_string$12];

function to_string$13(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "badge";
    case 2 : 
        return "colorPrimary";
    case 3 : 
        return "colorAccent";
    
  }
}

function to_obj$8(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$13(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$8 = /* module */[
  /* to_string */to_string$13,
  /* to_obj */to_obj$8
];

function make$10(color, className, badgeContent, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Badge.default, {
              color: to_string$12(color),
              className: Js_null_undefined.from_opt(className),
              badgeContent: badgeContent,
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$8, classes))
            }, children);
}

var Badge$1 = /* module */[
  /* Color */Color,
  /* Classes */Classes$8,
  /* make */make$10
];

function to_string$14(param) {
  if (param.tag) {
    return "disabled";
  } else {
    return "root";
  }
}

function to_obj$9(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$14(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$9 = /* module */[
  /* to_string */to_string$14,
  /* to_obj */to_obj$9
];

function make$11(type_, tabIndex, rootRef, role, onTouchStart, onTouchMove, onTouchEnd, onMouseUp, onMouseLeave, onMouseDown, onKeyUp, onKeyDown, onKeyboardFocus, onFocus, onClick, onBlur, keyboardFocusedClassName, focusRipple, disableRipple, disabled, component, className, centerRipple, theme, classes, children) {
  return ReasonReact.wrapJsForReason(ButtonBase.default, {
              type: type_,
              tabIndex: unwrapValue(tabIndex),
              rootRef: Js_null_undefined.from_opt(rootRef),
              role: Js_null_undefined.from_opt(role),
              onTouchStart: Js_null_undefined.from_opt(onTouchStart),
              onTouchMove: Js_null_undefined.from_opt(onTouchMove),
              onTouchEnd: Js_null_undefined.from_opt(onTouchEnd),
              onMouseUp: Js_null_undefined.from_opt(onMouseUp),
              onMouseLeave: Js_null_undefined.from_opt(onMouseLeave),
              onMouseDown: Js_null_undefined.from_opt(onMouseDown),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onKeyboardFocus: Js_null_undefined.from_opt(onKeyboardFocus),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onClick: Js_null_undefined.from_opt(onClick),
              onBlur: Js_null_undefined.from_opt(onBlur),
              keyboardFocusedClassName: Js_null_undefined.from_opt(keyboardFocusedClassName),
              focusRipple: Js_boolean.to_js_boolean(focusRipple),
              disableRipple: Js_boolean.to_js_boolean(disableRipple),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              component: Js_null_undefined.from_opt(component),
              className: Js_null_undefined.from_opt(className),
              centerRipple: Js_boolean.to_js_boolean(centerRipple),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$9, classes))
            }, children);
}

var ButtonBase$1 = /* module */[
  /* Classes */Classes$9,
  /* make */make$11
];

function to_string$15(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "horizontal";
    case 2 : 
        return "vertical";
    case 3 : 
        return "active";
    case 4 : 
        return "completed";
    case 5 : 
        return "disabled";
    case 6 : 
        return "iconContainer";
    case 7 : 
        return "iconContainerNoAlternative";
    case 8 : 
        return "alternativeLabelRoot";
    case 9 : 
        return "alternativeLabel";
    
  }
}

function to_obj$10(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$15(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$10 = /* module */[
  /* to_string */to_string$15,
  /* to_obj */to_obj$10
];

function make$12(optional, className, orientation, last, icon, disabled, completed, classes, alternativeLabel, active, children) {
  return ReasonReact.wrapJsForReason(StepLabel.default, {
              optional: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, optional)),
              className: Js_null_undefined.from_opt(className),
              orientation: Js_null_undefined.from_opt(orientation),
              last: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, last)),
              icon: Js_null_undefined.from_opt(icon),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              completed: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, completed)),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$10, classes)),
              alternativeLabel: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, alternativeLabel)),
              active: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, active))
            }, children);
}

var StepLabel$1 = /* module */[
  /* Classes */Classes$10,
  /* make */make$12
];

function to_string$16() {
  return "auto";
}

var Timeout = /* module */[/* to_string */to_string$16];

function make$13(timeout, transitionClasses, style, rootRef, onExited, onExiting, onExit, onEntered, onEntering, onEnter, in_, appear, theme, children) {
  return ReasonReact.wrapJsForReason(Grow.default, {
              timeout: typeof timeout === "number" || timeout[0] !== 770676513 ? unwrapValue(timeout) : unwrapValue(/* `String */[
                      -976970511,
                      "auto"
                    ]),
              transitionClasses: unwrapValue(transitionClasses),
              style: Js_null_undefined.from_opt(style),
              rootRef: Js_null_undefined.from_opt(rootRef),
              onExited: Js_null_undefined.from_opt(onExited),
              onExiting: Js_null_undefined.from_opt(onExiting),
              onExit: Js_null_undefined.from_opt(onExit),
              onEntered: Js_null_undefined.from_opt(onEntered),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEnter: Js_null_undefined.from_opt(onEnter),
              in: Js_boolean.to_js_boolean(in_),
              appear: Js_boolean.to_js_boolean(appear),
              theme: theme
            }, children);
}

var Grow$1 = /* module */[
  /* Timeout */Timeout,
  /* make */make$13
];

function to_string$17(param) {
  switch (param) {
    case 0 : 
        return "default";
    case 1 : 
        return "inherit";
    case 2 : 
        return "primary";
    case 3 : 
        return "contrast";
    case 4 : 
        return "accent";
    
  }
}

var Color$1 = /* module */[/* to_string */to_string$17];

function to_string$18(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "colorAccent";
    case 2 : 
        return "colorContrast";
    case 3 : 
        return "colorPrimary";
    case 4 : 
        return "colorInherit";
    case 5 : 
        return "disabled";
    case 6 : 
        return "label";
    case 7 : 
        return "icon";
    case 8 : 
        return "keyboardFocused";
    
  }
}

function to_obj$11(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$18(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$11 = /* module */[
  /* to_string */to_string$18,
  /* to_obj */to_obj$11
];

function make$14(rootRef, disableRipple, disabled, color, className, buttonRef, theme, classes, centerRipple, component, focusRipple, keyboardFocusedClassName, onBlur, onClick, onFocus, onKeyboardFocus, onKeyDown, onKeyUp, onMouseDown, onMouseLeave, onMouseUp, onTouchEnd, onTouchMove, onTouchStart, role, tabIndex, type_, children) {
  return ReasonReact.wrapJsForReason(IconButton.default, {
              rootRef: Js_null_undefined.from_opt(rootRef),
              disableRipple: Js_boolean.to_js_boolean(disableRipple),
              disabled: Js_boolean.to_js_boolean(disabled),
              color: to_string$17(color),
              className: Js_null_undefined.from_opt(className),
              buttonRef: Js_null_undefined.from_opt(buttonRef),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$11, classes)),
              centerRipple: Js_boolean.to_js_boolean(centerRipple),
              component: Js_null_undefined.from_opt(component),
              focusRipple: Js_boolean.to_js_boolean(focusRipple),
              keyboardFocusedClassName: Js_null_undefined.from_opt(keyboardFocusedClassName),
              onBlur: Js_null_undefined.from_opt(onBlur),
              onClick: Js_null_undefined.from_opt(onClick),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onKeyboardFocus: Js_null_undefined.from_opt(onKeyboardFocus),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              onMouseDown: Js_null_undefined.from_opt(onMouseDown),
              onMouseLeave: Js_null_undefined.from_opt(onMouseLeave),
              onMouseUp: Js_null_undefined.from_opt(onMouseUp),
              onTouchEnd: Js_null_undefined.from_opt(onTouchEnd),
              onTouchMove: Js_null_undefined.from_opt(onTouchMove),
              onTouchStart: Js_null_undefined.from_opt(onTouchStart),
              role: Js_null_undefined.from_opt(role),
              tabIndex: unwrapValue(tabIndex),
              type: type_
            }, children);
}

var IconButton$1 = /* module */[
  /* Color */Color$1,
  /* Classes */Classes$11,
  /* make */make$14
];

function to_string$19(param) {
  switch (param) {
    case 0 : 
        return "none";
    case 1 : 
        return "dense";
    case 2 : 
        return "normal";
    
  }
}

var Margin$1 = /* module */[/* to_string */to_string$19];

function to_string$20(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "marginNormal";
    case 2 : 
        return "marginDense";
    case 3 : 
        return "fullWidth";
    
  }
}

function to_obj$12(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$20(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$12 = /* module */[
  /* to_string */to_string$20,
  /* to_obj */to_obj$12
];

function make$15(margin, value, type_, sSelectProps, select, rowsMax, rows, rootRef, required, placeholder, onChange, name, multiline, labelClassName, label, inputRef, iInputProps, inputProps, iInputLabelProps, iInputClassName, inputClassName, id, helperTextClassName, helperText, fullWidth, fFormHelperTextProps, error, disabled, defaultValue, className, autoFocus, autoComplete, classes, theme, component, onBlur, onFocus, children) {
  return ReasonReact.wrapJsForReason(TextField.default, {
              margin: Js_null_undefined.from_opt(optionMap(to_string$19, margin)),
              value: Js_null_undefined.from_opt(optionMap(unwrapValue, value)),
              type: Js_null_undefined.from_opt(type_),
              SelectProps: Js_null_undefined.from_opt(sSelectProps),
              select: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, select)),
              rowsMax: Js_null_undefined.from_opt(optionMap(unwrapValue, rowsMax)),
              rows: Js_null_undefined.from_opt(optionMap(unwrapValue, rows)),
              rootRef: Js_null_undefined.from_opt(rootRef),
              required: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, required)),
              placeholder: Js_null_undefined.from_opt(placeholder),
              onChange: Js_null_undefined.from_opt(onChange),
              name: Js_null_undefined.from_opt(name),
              multiline: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, multiline)),
              labelClassName: Js_null_undefined.from_opt(labelClassName),
              label: Js_null_undefined.from_opt(label),
              inputRef: Js_null_undefined.from_opt(inputRef),
              InputProps: Js_null_undefined.from_opt(iInputProps),
              inputProps: Js_null_undefined.from_opt(inputProps),
              InputLabelProps: Js_null_undefined.from_opt(iInputLabelProps),
              InputClassName: Js_null_undefined.from_opt(iInputClassName),
              inputClassName: Js_null_undefined.from_opt(inputClassName),
              id: Js_null_undefined.from_opt(id),
              helperTextClassName: Js_null_undefined.from_opt(helperTextClassName),
              helperText: Js_null_undefined.from_opt(helperText),
              fullWidth: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, fullWidth)),
              FormHelperTextProps: Js_null_undefined.from_opt(fFormHelperTextProps),
              error: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, error)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              defaultValue: Js_null_undefined.from_opt(defaultValue),
              className: Js_null_undefined.from_opt(className),
              autoFocus: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, autoFocus)),
              autoComplete: Js_null_undefined.from_opt(autoComplete),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$12, classes)),
              theme: Js_null_undefined.from_opt(theme),
              component: component,
              onBlur: Js_null_undefined.from_opt(onBlur),
              onFocus: Js_null_undefined.from_opt(onFocus)
            }, children);
}

var TextField$1 = /* module */[
  /* Margin */Margin$1,
  /* Classes */Classes$12,
  /* make */make$15
];

function to_string$21(param) {
  switch (param) {
    case 0 : 
        return "default";
    case 1 : 
        return "primary";
    case 2 : 
        return "inherit";
    
  }
}

var Color$2 = /* module */[/* to_string */to_string$21];

function to_string$22(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "colorPrimary";
    case 2 : 
        return "colorInherit";
    case 3 : 
        return "inset";
    case 4 : 
        return "sticky";
    
  }
}

function to_obj$13(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$22(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$13 = /* module */[
  /* to_string */to_string$22,
  /* to_obj */to_obj$13
];

function make$16(inset, disableSticky, color, component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(ListSubheader.default, {
              inset: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, inset)),
              disableSticky: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disableSticky)),
              color: Js_null_undefined.from_opt(optionMap(to_string$21, color)),
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$13, classes))
            }, children);
}

var ListSubheader$1 = /* module */[
  /* Color */Color$2,
  /* Classes */Classes$13,
  /* make */make$16
];

function to_string$23() {
  return "root";
}

function to_obj$14(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$14 = /* module */[
  /* to_string */to_string$23,
  /* to_obj */to_obj$14
];

function make$17(disableTypography, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(DialogTitle.default, {
              disableTypography: Js_boolean.to_js_boolean(disableTypography),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$14, classes))
            }, children);
}

var DialogTitle$1 = /* module */[
  /* Classes */Classes$14,
  /* make */make$17
];

function to_string$24() {
  return "root";
}

function to_obj$15(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$15 = /* module */[
  /* to_string */to_string$24,
  /* to_obj */to_obj$15
];

function make$18(className, classes, children) {
  return ReasonReact.wrapJsForReason(DialogContent.default, {
              className: Js_null_undefined.from_opt(className),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$15, classes))
            }, children);
}

var DialogContent$1 = /* module */[
  /* Classes */Classes$15,
  /* make */make$18
];

function to_string$25() {
  return "auto";
}

var TransitionDuration = /* module */[/* to_string */to_string$25];

function to_string$26(param) {
  if (param !== 0) {
    return "anchorPosition";
  } else {
    return "anchorEl";
  }
}

var AnchorReference = /* module */[/* to_string */to_string$26];

function to_string$27() {
  return "paper";
}

function to_obj$16(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["paper"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$16 = /* module */[
  /* to_string */to_string$27,
  /* to_obj */to_obj$16
];

function make$19(transitionDuration, transitionClasses, transformOrigin, role, pPaperProps, open_, onRequestClose, onExited, onExiting, onExit, onEntered, onEntering, onEnter, marginThreshold, getContentAnchorEl, elevation, anchorOrigin, anchorReference, anchorPosition, anchorEl, theme, classes, bBackdropClassName, bBackdropComponent, bBackdropInvisible, bBackdropTransitionDuration, className, keepMounted, disableBackdrop, ignoreBackdropClick, ignoreEscapeKeyUp, modalManager, onBackdropClick, onEscapeKeyUp, show, children) {
  return ReasonReact.wrapJsForReason(Popover.default, {
              transitionDuration: Js_null_undefined.from_opt(optionMap((function (x) {
                          if (typeof x === "number" || x[0] !== 770676513) {
                            return unwrapValue(x);
                          } else {
                            return unwrapValue(/* `String */[
                                        -976970511,
                                        "auto"
                                      ]);
                          }
                        }), transitionDuration)),
              transitionClasses: Js_null_undefined.from_opt(optionMap(unwrapValue, transitionClasses)),
              transformOrigin: transformOrigin,
              role: Js_null_undefined.from_opt(role),
              PaperProps: Js_null_undefined.from_opt(pPaperProps),
              open: Js_boolean.to_js_boolean(open_),
              onRequestClose: Js_null_undefined.from_opt(onRequestClose),
              onExited: Js_null_undefined.from_opt(onExited),
              onExiting: Js_null_undefined.from_opt(onExiting),
              onExit: Js_null_undefined.from_opt(onExit),
              onEntered: Js_null_undefined.from_opt(onEntered),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEnter: Js_null_undefined.from_opt(onEnter),
              marginThreshold: marginThreshold,
              getContentAnchorEl: Js_null_undefined.from_opt(getContentAnchorEl),
              elevation: Js_null_undefined.from_opt(elevation),
              anchorOrigin: anchorOrigin,
              anchorReference: Js_null_undefined.from_opt(optionMap(to_string$26, anchorReference)),
              anchorPosition: Js_null_undefined.from_opt(anchorPosition),
              anchorEl: Js_null_undefined.from_opt(anchorEl),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$16, classes)),
              BackdropClassName: Js_null_undefined.from_opt(bBackdropClassName),
              BackdropComponent: bBackdropComponent,
              BackdropInvisible: Js_boolean.to_js_boolean(bBackdropInvisible),
              BackdropTransitionDuration: bBackdropTransitionDuration,
              className: Js_null_undefined.from_opt(className),
              keepMounted: Js_boolean.to_js_boolean(keepMounted),
              disableBackdrop: Js_boolean.to_js_boolean(disableBackdrop),
              ignoreBackdropClick: Js_boolean.to_js_boolean(ignoreBackdropClick),
              ignoreEscapeKeyUp: Js_boolean.to_js_boolean(ignoreEscapeKeyUp),
              modalManager: modalManager,
              onBackdropClick: Js_null_undefined.from_opt(onBackdropClick),
              onEscapeKeyUp: Js_null_undefined.from_opt(onEscapeKeyUp),
              show: Js_boolean.to_js_boolean(show)
            }, children);
}

var Popover$1 = /* module */[
  /* TransitionDuration */TransitionDuration,
  /* AnchorReference */AnchorReference,
  /* Classes */Classes$16,
  /* make */make$19
];

function to_string$28(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "colorDefault";
    case 2 : 
        return "img";
    
  }
}

function to_obj$17(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$28(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$17 = /* module */[
  /* to_string */to_string$28,
  /* to_obj */to_obj$17
];

function make$20(srcSet, src, sizes, imgProps, component, className, childrenClassName, alt, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Avatar.default, {
              srcSet: Js_null_undefined.from_opt(srcSet),
              src: Js_null_undefined.from_opt(src),
              sizes: Js_null_undefined.from_opt(sizes),
              imgProps: Js_null_undefined.from_opt(imgProps),
              component: component,
              className: Js_null_undefined.from_opt(className),
              childrenClassName: Js_null_undefined.from_opt(childrenClassName),
              alt: Js_null_undefined.from_opt(alt),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$17, classes))
            }, children);
}

var Avatar$1 = /* module */[
  /* Classes */Classes$17,
  /* make */make$20
];

function to_string$29(param) {
  if (param !== 0) {
    return "vertical";
  } else {
    return "horizontal";
  }
}

var Orientation = /* module */[/* to_string */to_string$29];

function to_string$30(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "horizontal";
    case 2 : 
        return "vertical";
    
  }
}

function to_obj$18(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$30(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$18 = /* module */[
  /* to_string */to_string$30,
  /* to_obj */to_obj$18
];

function make$21(className, orientation, nonLinear, connector, classes, alternativeLabel, activeStep, theme, component, elevation, square, children) {
  return ReasonReact.wrapJsForReason(Stepper.default, {
              className: Js_null_undefined.from_opt(className),
              orientation: Js_null_undefined.from_opt(optionMap(to_string$29, orientation)),
              nonLinear: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, nonLinear)),
              connector: Js_null_undefined.from_opt(optionMap(unwrapValue, connector)),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$18, classes)),
              alternativeLabel: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, alternativeLabel)),
              activeStep: Js_null_undefined.from_opt(activeStep),
              theme: Js_null_undefined.from_opt(theme),
              component: component,
              elevation: elevation,
              square: Js_boolean.to_js_boolean(square)
            }, children);
}

var Stepper$1 = /* module */[
  /* Orientation */Orientation,
  /* Classes */Classes$18,
  /* make */make$21
];

function to_string$31(param) {
  switch (param) {
    case 0 : 
        return "accent";
    case 1 : 
        return "primary";
    case 2 : 
        return "inherit";
    
  }
}

var TextColor = /* module */[/* to_string */to_string$31];

function to_string$32(param) {
  switch (param) {
    case 0 : 
        return "auto";
    case 1 : 
        return "on";
    case 2 : 
        return "off";
    
  }
}

var ScrollButtons = /* module */[/* to_string */to_string$32];

function to_string$33(param) {
  if (param !== 0) {
    return "primary";
  } else {
    return "accent";
  }
}

var IndicatorColor = /* module */[/* to_string */to_string$33];

function to_string$34(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "flexContainer";
    case 2 : 
        return "scrollingContainer";
    case 3 : 
        return "fixed";
    case 4 : 
        return "scrollable";
    case 5 : 
        return "centered";
    case 6 : 
        return "buttonAuto";
    
  }
}

function to_obj$19(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$34(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$19 = /* module */[
  /* to_string */to_string$34,
  /* to_obj */to_obj$19
];

function make$22(value, textColor, tTabScrollButton, scrollButtons, scrollable, onChange, indicatorColor, indicatorClassName, fullWidth, className, centered, buttonClassName, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Tabs.default, {
              value: value,
              textColor: to_string$31(textColor),
              TabScrollButton: tTabScrollButton,
              scrollButtons: to_string$32(scrollButtons),
              scrollable: Js_boolean.to_js_boolean(scrollable),
              onChange: onChange,
              indicatorColor: typeof indicatorColor === "number" || indicatorColor[0] !== 770676513 ? unwrapValue(indicatorColor) : unwrapValue(/* `String */[
                      -976970511,
                      to_string$33(indicatorColor[1])
                    ]),
              indicatorClassName: Js_null_undefined.from_opt(indicatorClassName),
              fullWidth: Js_boolean.to_js_boolean(fullWidth),
              className: Js_null_undefined.from_opt(className),
              centered: Js_boolean.to_js_boolean(centered),
              buttonClassName: Js_null_undefined.from_opt(buttonClassName),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$19, classes))
            }, children);
}

var Tabs$1 = /* module */[
  /* TextColor */TextColor,
  /* ScrollButtons */ScrollButtons,
  /* IndicatorColor */IndicatorColor,
  /* Classes */Classes$19,
  /* make */make$22
];

function to_string$35(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "padding";
    case 2 : 
        return "dense";
    case 3 : 
        return "subheader";
    
  }
}

function to_obj$20(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$35(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$20 = /* module */[
  /* to_string */to_string$35,
  /* to_obj */to_obj$20
];

function make$23(subheader, rootRef, disablePadding, dense, component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(List.default, {
              subheader: Js_null_undefined.from_opt(subheader),
              rootRef: Js_null_undefined.from_opt(rootRef),
              disablePadding: Js_boolean.to_js_boolean(disablePadding),
              dense: Js_boolean.to_js_boolean(dense),
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$20, classes))
            }, children);
}

var List$1 = /* module */[
  /* Classes */Classes$20,
  /* make */make$23
];

function to_string$36(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "head";
    case 2 : 
        return "footer";
    case 3 : 
        return "hover";
    case 4 : 
        return "selected";
    
  }
}

function to_obj$21(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$36(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$21 = /* module */[
  /* to_string */to_string$36,
  /* to_obj */to_obj$21
];

function make$24(selected, hover, component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(TableRow.default, {
              selected: Js_boolean.to_js_boolean(selected),
              hover: Js_boolean.to_js_boolean(hover),
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$21, classes))
            }, children);
}

var TableRow$1 = /* module */[
  /* Classes */Classes$21,
  /* make */make$24
];

function to_string$37(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "default";
    case 1 : 
        return "checked";
    case 2 : 
        return "disabled";
    
  }
}

function to_obj$22(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$37(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$22 = /* module */[
  /* to_string */to_string$37,
  /* to_obj */to_obj$22
];

function make$25(value, tabIndex, onChange, name, inputRef, inputProps, icon, disableRipple, disabled, defaultChecked, className, checkedIcon, checked, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Radio.default, {
              value: Js_null_undefined.from_opt(value),
              tabIndex: Js_null_undefined.from_opt(optionMap(unwrapValue, tabIndex)),
              onChange: Js_null_undefined.from_opt(onChange),
              name: Js_null_undefined.from_opt(name),
              inputRef: Js_null_undefined.from_opt(inputRef),
              inputProps: Js_null_undefined.from_opt(inputProps),
              icon: Js_null_undefined.from_opt(icon),
              disableRipple: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disableRipple)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              defaultChecked: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, defaultChecked)),
              className: Js_null_undefined.from_opt(className),
              checkedIcon: Js_null_undefined.from_opt(checkedIcon),
              checked: Js_null_undefined.from_opt(optionMap(unwrapValue, checked)),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$22, classes))
            }, children);
}

var Radio$1 = /* module */[
  /* Classes */Classes$22,
  /* make */make$25
];

function to_string$38() {
  return "root";
}

function to_obj$23(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$23 = /* module */[
  /* to_string */to_string$38,
  /* to_obj */to_obj$23
];

function make$26(viewBox, titleAccess, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(SvgIcon.default, {
              viewBox: viewBox,
              titleAccess: Js_null_undefined.from_opt(titleAccess),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$23, classes))
            }, children);
}

var SvgIcon$1 = /* module */[
  /* Classes */Classes$23,
  /* make */make$26
];

function to_string$39() {
  return "root";
}

function to_obj$24(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$24 = /* module */[
  /* to_string */to_string$39,
  /* to_obj */to_obj$24
];

function make$27(component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Table.default, {
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$24, classes))
            }, children);
}

var Table$1 = /* module */[
  /* Classes */Classes$24,
  /* make */make$27
];

function to_string$40(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "disabled";
    case 2 : 
        return "label";
    
  }
}

function to_obj$25(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$40(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$25 = /* module */[
  /* to_string */to_string$40,
  /* to_obj */to_obj$25
];

function make$28(value, onChange, name, label, inputRef, disabled, control, className, checked, theme, classes, children) {
  return ReasonReact.wrapJsForReason(FormControlLabel.default, {
              value: Js_null_undefined.from_opt(value),
              onChange: Js_null_undefined.from_opt(onChange),
              name: Js_null_undefined.from_opt(name),
              label: label,
              inputRef: Js_null_undefined.from_opt(inputRef),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              control: control,
              className: Js_null_undefined.from_opt(className),
              checked: Js_null_undefined.from_opt(optionMap(unwrapValue, checked)),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$25, classes))
            }, children);
}

var FormControlLabel$1 = /* module */[
  /* Classes */Classes$25,
  /* make */make$28
];

function make$29(theme, sheetsManager, disableStylesGeneration, children) {
  return ReasonReact.wrapJsForReason(MuiThemeProvider.default, {
              theme: theme,
              sheetsManager: Js_null_undefined.from_opt(sheetsManager),
              disableStylesGeneration: Js_null_undefined.from_opt(disableStylesGeneration)
            }, children);
}

var MuiThemeProvider$1 = /* module */[/* make */make$29];

function to_string$41(param) {
  switch (param) {
    case 0 : 
        return "default";
    case 1 : 
        return "inherit";
    case 2 : 
        return "primary";
    case 3 : 
        return "accent";
    case 4 : 
        return "contrast";
    
  }
}

var Color$3 = /* module */[/* to_string */to_string$41];

function to_string$42(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "dense";
    case 2 : 
        return "label";
    case 3 : 
        return "flatPrimary";
    case 4 : 
        return "flatAccent";
    case 5 : 
        return "flatContrast";
    case 6 : 
        return "colorInherit";
    case 7 : 
        return "raised";
    case 8 : 
        return "keyboardFocused";
    case 9 : 
        return "raisedPrimary";
    case 10 : 
        return "raisedAccent";
    case 11 : 
        return "raisedContrast";
    case 12 : 
        return "disabled";
    case 13 : 
        return "fab";
    
  }
}

function to_obj$26(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$42(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$26 = /* module */[
  /* to_string */to_string$42,
  /* to_obj */to_obj$26
];

function make$30(type_, raised, href, fab, disableRipple, disableFocusRipple, disabled, dense, component, color, className, theme, classes, centerRipple, focusRipple, keyboardFocusedClassName, onBlur, onClick, onFocus, onKeyboardFocus, onKeyDown, onKeyUp, onMouseDown, onMouseLeave, onMouseUp, onTouchEnd, onTouchMove, onTouchStart, role, rootRef, tabIndex, children) {
  return ReasonReact.wrapJsForReason(Button.default, {
              type: type_,
              raised: Js_boolean.to_js_boolean(raised),
              href: Js_null_undefined.from_opt(href),
              fab: Js_boolean.to_js_boolean(fab),
              disableRipple: Js_boolean.to_js_boolean(disableRipple),
              disableFocusRipple: Js_boolean.to_js_boolean(disableFocusRipple),
              disabled: Js_boolean.to_js_boolean(disabled),
              dense: Js_boolean.to_js_boolean(dense),
              component: Js_null_undefined.from_opt(component),
              color: to_string$41(color),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$26, classes)),
              centerRipple: Js_boolean.to_js_boolean(centerRipple),
              focusRipple: Js_boolean.to_js_boolean(focusRipple),
              keyboardFocusedClassName: Js_null_undefined.from_opt(keyboardFocusedClassName),
              onBlur: Js_null_undefined.from_opt(onBlur),
              onClick: Js_null_undefined.from_opt(onClick),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onKeyboardFocus: Js_null_undefined.from_opt(onKeyboardFocus),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              onMouseDown: Js_null_undefined.from_opt(onMouseDown),
              onMouseLeave: Js_null_undefined.from_opt(onMouseLeave),
              onMouseUp: Js_null_undefined.from_opt(onMouseUp),
              onTouchEnd: Js_null_undefined.from_opt(onTouchEnd),
              onTouchMove: Js_null_undefined.from_opt(onTouchMove),
              onTouchStart: Js_null_undefined.from_opt(onTouchStart),
              role: Js_null_undefined.from_opt(role),
              rootRef: Js_null_undefined.from_opt(rootRef),
              tabIndex: unwrapValue(tabIndex)
            }, children);
}

var Button$1 = /* module */[
  /* Color */Color$3,
  /* Classes */Classes$26,
  /* make */make$30
];

function to_string$43() {
  return "auto";
}

var TransitionDuration$1 = /* module */[/* to_string */to_string$43];

function to_string$44(param) {
  if (param !== 0) {
    return "anchorPosition";
  } else {
    return "anchorEl";
  }
}

var AnchorReference$1 = /* module */[/* to_string */to_string$44];

function to_string$45() {
  return "paper";
}

function to_obj$27(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["paper"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$27 = /* module */[
  /* to_string */to_string$45,
  /* to_obj */to_obj$27
];

function make$31(transitionDuration, pPopoverClasses, pPaperProps, open_, onRequestClose, onExited, onExiting, onExit, onEntered, onEntering, onEnter, mMenuListProps, anchorEl, theme, classes, anchorPosition, anchorReference, anchorOrigin, elevation, getContentAnchorEl, marginThreshold, role, transformOrigin, transitionClasses, children) {
  return ReasonReact.wrapJsForReason(Menu.default, {
              transitionDuration: typeof transitionDuration === "number" || transitionDuration[0] !== 770676513 ? unwrapValue(transitionDuration) : unwrapValue(/* `String */[
                      -976970511,
                      "auto"
                    ]),
              PopoverClasses: Js_null_undefined.from_opt(pPopoverClasses),
              PaperProps: Js_null_undefined.from_opt(pPaperProps),
              open: Js_boolean.to_js_boolean(open_),
              onRequestClose: Js_null_undefined.from_opt(onRequestClose),
              onExited: Js_null_undefined.from_opt(onExited),
              onExiting: Js_null_undefined.from_opt(onExiting),
              onExit: Js_null_undefined.from_opt(onExit),
              onEntered: Js_null_undefined.from_opt(onEntered),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEnter: Js_null_undefined.from_opt(onEnter),
              MenuListProps: Js_null_undefined.from_opt(mMenuListProps),
              anchorEl: Js_null_undefined.from_opt(anchorEl),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$27, classes)),
              anchorPosition: Js_null_undefined.from_opt(anchorPosition),
              anchorReference: Js_null_undefined.from_opt(optionMap(to_string$44, anchorReference)),
              anchorOrigin: anchorOrigin,
              elevation: Js_null_undefined.from_opt(elevation),
              getContentAnchorEl: Js_null_undefined.from_opt(getContentAnchorEl),
              marginThreshold: marginThreshold,
              role: Js_null_undefined.from_opt(role),
              transformOrigin: transformOrigin,
              transitionClasses: Js_null_undefined.from_opt(optionMap(unwrapValue, transitionClasses))
            }, children);
}

var Menu$1 = /* module */[
  /* TransitionDuration */TransitionDuration$1,
  /* AnchorReference */AnchorReference$1,
  /* Classes */Classes$27,
  /* make */make$31
];

function to_string$46() {
  return "root";
}

function to_obj$28(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$28 = /* module */[
  /* to_string */to_string$46,
  /* to_obj */to_obj$28
];

function make$32(component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(TableFooter.default, {
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$28, classes))
            }, children);
}

var TableFooter$1 = /* module */[
  /* Classes */Classes$28,
  /* make */make$32
];

function to_string$47(param) {
  switch (param) {
    case 0 : 
        return "1";
    case 1 : 
        return "2";
    case 2 : 
        return "3";
    case 3 : 
        return "4";
    case 4 : 
        return "5";
    case 5 : 
        return "6";
    case 6 : 
        return "7";
    case 7 : 
        return "8";
    case 8 : 
        return "9";
    case 9 : 
        return "10";
    case 10 : 
        return "11";
    case 11 : 
        return "12";
    
  }
}

var Xl = /* module */[/* to_string */to_string$47];

function to_string$48(param) {
  switch (param) {
    case 0 : 
        return "1";
    case 1 : 
        return "2";
    case 2 : 
        return "3";
    case 3 : 
        return "4";
    case 4 : 
        return "5";
    case 5 : 
        return "6";
    case 6 : 
        return "7";
    case 7 : 
        return "8";
    case 8 : 
        return "9";
    case 9 : 
        return "10";
    case 10 : 
        return "11";
    case 11 : 
        return "12";
    
  }
}

var Lg = /* module */[/* to_string */to_string$48];

function to_string$49(param) {
  switch (param) {
    case 0 : 
        return "1";
    case 1 : 
        return "2";
    case 2 : 
        return "3";
    case 3 : 
        return "4";
    case 4 : 
        return "5";
    case 5 : 
        return "6";
    case 6 : 
        return "7";
    case 7 : 
        return "8";
    case 8 : 
        return "9";
    case 9 : 
        return "10";
    case 10 : 
        return "11";
    case 11 : 
        return "12";
    
  }
}

var Md = /* module */[/* to_string */to_string$49];

function to_string$50(param) {
  switch (param) {
    case 0 : 
        return "1";
    case 1 : 
        return "2";
    case 2 : 
        return "3";
    case 3 : 
        return "4";
    case 4 : 
        return "5";
    case 5 : 
        return "6";
    case 6 : 
        return "7";
    case 7 : 
        return "8";
    case 8 : 
        return "9";
    case 9 : 
        return "10";
    case 10 : 
        return "11";
    case 11 : 
        return "12";
    
  }
}

var Sm = /* module */[/* to_string */to_string$50];

function to_string$51(param) {
  switch (param) {
    case 0 : 
        return "1";
    case 1 : 
        return "2";
    case 2 : 
        return "3";
    case 3 : 
        return "4";
    case 4 : 
        return "5";
    case 5 : 
        return "6";
    case 6 : 
        return "7";
    case 7 : 
        return "8";
    case 8 : 
        return "9";
    case 9 : 
        return "10";
    case 10 : 
        return "11";
    case 11 : 
        return "12";
    
  }
}

var Xs = /* module */[/* to_string */to_string$51];

function to_string$52(param) {
  switch (param) {
    case 0 : 
        return "nowrap";
    case 1 : 
        return "wrap";
    case 2 : 
        return "wrap-reverse";
    
  }
}

var Wrap = /* module */[/* to_string */to_string$52];

function to_string$53(param) {
  switch (param) {
    case 0 : 
        return "flex-start";
    case 1 : 
        return "center";
    case 2 : 
        return "flex-end";
    case 3 : 
        return "space-between";
    case 4 : 
        return "space-around";
    
  }
}

var Justify = /* module */[/* to_string */to_string$53];

function to_string$54(param) {
  switch (param) {
    case 0 : 
        return "0";
    case 1 : 
        return "8";
    case 2 : 
        return "16";
    case 3 : 
        return "24";
    case 4 : 
        return "40";
    
  }
}

var Spacing$1 = /* module */[/* to_string */to_string$54];

function to_string$55(param) {
  switch (param) {
    case 0 : 
        return "row";
    case 1 : 
        return "row-reverse";
    case 2 : 
        return "column";
    case 3 : 
        return "column-reverse";
    
  }
}

var Direction$1 = /* module */[/* to_string */to_string$55];

function to_string$56(param) {
  switch (param) {
    case 0 : 
        return "flex-start";
    case 1 : 
        return "center";
    case 2 : 
        return "flex-end";
    case 3 : 
        return "stretch";
    case 4 : 
        return "baseline";
    
  }
}

var AlignItems = /* module */[/* to_string */to_string$56];

function to_string$57(param) {
  switch (param) {
    case 0 : 
        return "stretch";
    case 1 : 
        return "center";
    case 2 : 
        return "flex-start";
    case 3 : 
        return "flex-end";
    case 4 : 
        return "space-between";
    case 5 : 
        return "space-around";
    
  }
}

var AlignContent = /* module */[/* to_string */to_string$57];

function to_string$58(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "typeContainer";
    case 1 : 
        return "typeItem";
    case 2 : 
        return "direction-xs-column";
    case 3 : 
        return "direction-xs-column-reverse";
    case 4 : 
        return "direction-xs-row-reverse";
    case 5 : 
        return "wrap-xs-nowrap";
    case 6 : 
        return "wrap-xs-wrap-reverse";
    case 7 : 
        return "align-items-xs-center";
    case 8 : 
        return "align-items-xs-flex-start";
    case 9 : 
        return "align-items-xs-flex-end";
    case 10 : 
        return "align-items-xs-baseline";
    case 11 : 
        return "align-content-xs-center";
    case 12 : 
        return "align-content-xs-flex-start";
    case 13 : 
        return "align-content-xs-flex-end";
    case 14 : 
        return "align-content-xs-space-between";
    case 15 : 
        return "align-content-xs-space-around";
    case 16 : 
        return "justify-xs-center";
    case 17 : 
        return "justify-xs-flex-end";
    case 18 : 
        return "justify-xs-space-between";
    case 19 : 
        return "justify-xs-space-around";
    case 20 : 
        return "spacing-xs-8";
    case 21 : 
        return "spacing-xs-16";
    case 22 : 
        return "spacing-xs-24";
    case 23 : 
        return "spacing-xs-40";
    case 24 : 
        return "grid-xs";
    case 25 : 
        return "grid-xs-1";
    case 26 : 
        return "grid-xs-2";
    case 27 : 
        return "grid-xs-3";
    case 28 : 
        return "grid-xs-4";
    case 29 : 
        return "grid-xs-5";
    case 30 : 
        return "grid-xs-6";
    case 31 : 
        return "grid-xs-7";
    case 32 : 
        return "grid-xs-8";
    case 33 : 
        return "grid-xs-9";
    case 34 : 
        return "grid-xs-10";
    case 35 : 
        return "grid-xs-11";
    case 36 : 
        return "grid-xs-12";
    
  }
}

function to_obj$29(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$58(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$29 = /* module */[
  /* to_string */to_string$58,
  /* to_obj */to_obj$29
];

function make$33(xl, lg, md, sm, xs, wrap, justify, hidden, spacing, direction, alignItems, alignContent, item, container, component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Grid.default, {
              xl: Js_null_undefined.from_opt(optionMap((function (x) {
                          if (typeof x === "number" || x[0] !== 770676513) {
                            return unwrapValue(x);
                          } else {
                            return unwrapValue(/* `String */[
                                        -976970511,
                                        to_string$47(x[1])
                                      ]);
                          }
                        }), xl)),
              lg: Js_null_undefined.from_opt(optionMap((function (x) {
                          if (typeof x === "number" || x[0] !== 770676513) {
                            return unwrapValue(x);
                          } else {
                            return unwrapValue(/* `String */[
                                        -976970511,
                                        to_string$48(x[1])
                                      ]);
                          }
                        }), lg)),
              md: Js_null_undefined.from_opt(optionMap((function (x) {
                          if (typeof x === "number" || x[0] !== 770676513) {
                            return unwrapValue(x);
                          } else {
                            return unwrapValue(/* `String */[
                                        -976970511,
                                        to_string$49(x[1])
                                      ]);
                          }
                        }), md)),
              sm: Js_null_undefined.from_opt(optionMap((function (x) {
                          if (typeof x === "number" || x[0] !== 770676513) {
                            return unwrapValue(x);
                          } else {
                            return unwrapValue(/* `String */[
                                        -976970511,
                                        to_string$50(x[1])
                                      ]);
                          }
                        }), sm)),
              xs: Js_null_undefined.from_opt(optionMap((function (x) {
                          if (typeof x === "number" || x[0] !== 770676513) {
                            return unwrapValue(x);
                          } else {
                            return unwrapValue(/* `String */[
                                        -976970511,
                                        to_string$51(x[1])
                                      ]);
                          }
                        }), xs)),
              wrap: to_string$52(wrap),
              justify: to_string$53(justify),
              hidden: Js_null_undefined.from_opt(hidden),
              spacing: to_string$54(spacing),
              direction: to_string$55(direction),
              alignItems: to_string$56(alignItems),
              alignContent: to_string$57(alignContent),
              item: Js_boolean.to_js_boolean(item),
              container: Js_boolean.to_js_boolean(container),
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$29, classes))
            }, children);
}

var Grid$1 = /* module */[
  /* Xl */Xl,
  /* Lg */Lg,
  /* Md */Md,
  /* Sm */Sm,
  /* Xs */Xs,
  /* Wrap */Wrap,
  /* Justify */Justify,
  /* Spacing */Spacing$1,
  /* Direction */Direction$1,
  /* AlignItems */AlignItems,
  /* AlignContent */AlignContent,
  /* Classes */Classes$29,
  /* make */make$33
];

function to_string$59(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "rounded";
    case 2 : 
        return "shadow0";
    case 3 : 
        return "shadow1";
    case 4 : 
        return "shadow2";
    case 5 : 
        return "shadow3";
    case 6 : 
        return "shadow4";
    case 7 : 
        return "shadow5";
    case 8 : 
        return "shadow6";
    case 9 : 
        return "shadow7";
    case 10 : 
        return "shadow8";
    case 11 : 
        return "shadow9";
    case 12 : 
        return "shadow10";
    case 13 : 
        return "shadow11";
    case 14 : 
        return "shadow12";
    case 15 : 
        return "shadow13";
    case 16 : 
        return "shadow14";
    case 17 : 
        return "shadow15";
    case 18 : 
        return "shadow16";
    case 19 : 
        return "shadow17";
    case 20 : 
        return "shadow18";
    case 21 : 
        return "shadow19";
    case 22 : 
        return "shadow20";
    case 23 : 
        return "shadow21";
    case 24 : 
        return "shadow22";
    case 25 : 
        return "shadow23";
    case 26 : 
        return "shadow24";
    
  }
}

function to_obj$30(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$59(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$30 = /* module */[
  /* to_string */to_string$59,
  /* to_obj */to_obj$30
];

function make$34(className, raised, classes, theme, component, elevation, square, children) {
  return ReasonReact.wrapJsForReason(Card.default, {
              className: Js_null_undefined.from_opt(className),
              raised: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, raised)),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$30, classes)),
              theme: Js_null_undefined.from_opt(theme),
              component: component,
              elevation: elevation,
              square: Js_boolean.to_js_boolean(square)
            }, children);
}

var Card$1 = /* module */[
  /* Classes */Classes$30,
  /* make */make$34
];

function to_string$60(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "container";
    case 2 : 
        return "keyboardFocused";
    case 3 : 
        return "default";
    case 4 : 
        return "dense";
    case 5 : 
        return "disabled";
    case 6 : 
        return "divider";
    case 7 : 
        return "gutters";
    case 8 : 
        return "button";
    case 9 : 
        return "secondaryAction";
    
  }
}

function to_obj$31(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$60(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$31 = /* module */[
  /* to_string */to_string$60,
  /* to_obj */to_obj$31
];

function make$35(divider, disableGutters, disabled, dense, component, className, button, theme, classes, children) {
  return ReasonReact.wrapJsForReason(ListItem.default, {
              divider: Js_boolean.to_js_boolean(divider),
              disableGutters: Js_boolean.to_js_boolean(disableGutters),
              disabled: Js_boolean.to_js_boolean(disabled),
              dense: Js_boolean.to_js_boolean(dense),
              component: component,
              className: Js_null_undefined.from_opt(className),
              button: Js_boolean.to_js_boolean(button),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$31, classes))
            }, children);
}

var ListItem$1 = /* module */[
  /* Classes */Classes$31,
  /* make */make$35
];

function to_string$61(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "padding";
    case 2 : 
        return "dense";
    case 3 : 
        return "subheader";
    
  }
}

function to_obj$32(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$61(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$32 = /* module */[
  /* to_string */to_string$61,
  /* to_obj */to_obj$32
];

function make$36(onKeyDown, onBlur, className, classes, theme, component, dense, disablePadding, rootRef, subheader, children) {
  return ReasonReact.wrapJsForReason(MenuList.default, {
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onBlur: Js_null_undefined.from_opt(onBlur),
              className: Js_null_undefined.from_opt(className),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$32, classes)),
              theme: Js_null_undefined.from_opt(theme),
              component: component,
              dense: Js_boolean.to_js_boolean(dense),
              disablePadding: Js_boolean.to_js_boolean(disablePadding),
              rootRef: Js_null_undefined.from_opt(rootRef),
              subheader: Js_null_undefined.from_opt(subheader)
            }, children);
}

var MenuList$1 = /* module */[
  /* Classes */Classes$32,
  /* make */make$36
];

function to_string$62() {
  return "root";
}

function to_obj$33(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$33 = /* module */[
  /* to_string */to_string$62,
  /* to_obj */to_obj$33
];

function make$37(className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(ExpansionPanelDetails.default, {
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$33, classes))
            }, children);
}

var ExpansionPanelDetails$1 = /* module */[
  /* Classes */Classes$33,
  /* make */make$37
];

function to_string$63() {
  return "root";
}

function to_obj$34(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$34 = /* module */[
  /* to_string */to_string$63,
  /* to_obj */to_obj$34
];

function make$38(className, classes, children) {
  return ReasonReact.wrapJsForReason(CardContent.default, {
              className: Js_null_undefined.from_opt(className),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$34, classes))
            }, children);
}

var CardContent$1 = /* module */[
  /* Classes */Classes$34,
  /* make */make$38
];

function to_string$64(param) {
  switch (param) {
    case 0 : 
        return "inherit";
    case 1 : 
        return "accent";
    case 2 : 
        return "action";
    case 3 : 
        return "contrast";
    case 4 : 
        return "disabled";
    case 5 : 
        return "error";
    case 6 : 
        return "primary";
    
  }
}

var Color$4 = /* module */[/* to_string */to_string$64];

function to_string$65(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "colorAccent";
    case 2 : 
        return "colorAction";
    case 3 : 
        return "colorContrast";
    case 4 : 
        return "colorDisabled";
    case 5 : 
        return "colorError";
    case 6 : 
        return "colorPrimary";
    
  }
}

function to_obj$35(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$65(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$35 = /* module */[
  /* to_string */to_string$65,
  /* to_obj */to_obj$35
];

function make$39(color, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Icon.default, {
              color: to_string$64(color),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$35, classes))
            }, children);
}

var Icon$1 = /* module */[
  /* Color */Color$4,
  /* Classes */Classes$35,
  /* make */make$39
];

function to_string$66(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "default";
    case 1 : 
        return "checked";
    case 2 : 
        return "disabled";
    
  }
}

function to_obj$36(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$66(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$36 = /* module */[
  /* to_string */to_string$66,
  /* to_obj */to_obj$36
];

function make$40(value, tabIndex, onChange, name, inputRef, inputProps, indeterminateIcon, indeterminate, icon, disableRipple, disabled, defaultChecked, className, checkedIcon, checked, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Checkbox.default, {
              value: Js_null_undefined.from_opt(value),
              tabIndex: Js_null_undefined.from_opt(optionMap(unwrapValue, tabIndex)),
              onChange: Js_null_undefined.from_opt(onChange),
              name: Js_null_undefined.from_opt(name),
              inputRef: Js_null_undefined.from_opt(inputRef),
              inputProps: Js_null_undefined.from_opt(inputProps),
              indeterminateIcon: indeterminateIcon,
              indeterminate: Js_boolean.to_js_boolean(indeterminate),
              icon: Js_null_undefined.from_opt(icon),
              disableRipple: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disableRipple)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              defaultChecked: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, defaultChecked)),
              className: Js_null_undefined.from_opt(className),
              checkedIcon: Js_null_undefined.from_opt(checkedIcon),
              checked: Js_null_undefined.from_opt(optionMap(unwrapValue, checked)),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$36, classes))
            }, children);
}

var Checkbox$1 = /* module */[
  /* Classes */Classes$36,
  /* make */make$40
];

function to_string$67(param) {
  switch (param) {
    case 0 : 
        return "xs";
    case 1 : 
        return "sm";
    case 2 : 
        return "md";
    
  }
}

var MaxWidth = /* module */[/* to_string */to_string$67];

function to_string$68(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "paper";
    case 2 : 
        return "paperWidthXs";
    case 3 : 
        return "paperWidthSm";
    case 4 : 
        return "paperWidthMd";
    case 5 : 
        return "fullWidth";
    case 6 : 
        return "fullScreen";
    
  }
}

function to_obj$37(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$68(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$37 = /* module */[
  /* to_string */to_string$68,
  /* to_obj */to_obj$37
];

function make$41(transition, open_, onRequestClose, onExited, onExiting, onExit, onEscapeKeyUp, onEntered, onEntering, onEnter, onBackdropClick, fullWidth, maxWidth, transitionDuration, ignoreEscapeKeyUp, ignoreBackdropClick, fullScreen, className, theme, classes, bBackdropClassName, bBackdropComponent, bBackdropInvisible, bBackdropTransitionDuration, keepMounted, disableBackdrop, modalManager, show, children) {
  return ReasonReact.wrapJsForReason(Dialog.default, {
              transition: transition,
              open: Js_boolean.to_js_boolean(open_),
              onRequestClose: Js_null_undefined.from_opt(onRequestClose),
              onExited: Js_null_undefined.from_opt(onExited),
              onExiting: Js_null_undefined.from_opt(onExiting),
              onExit: Js_null_undefined.from_opt(onExit),
              onEscapeKeyUp: Js_null_undefined.from_opt(onEscapeKeyUp),
              onEntered: Js_null_undefined.from_opt(onEntered),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEnter: Js_null_undefined.from_opt(onEnter),
              onBackdropClick: Js_null_undefined.from_opt(onBackdropClick),
              fullWidth: Js_boolean.to_js_boolean(fullWidth),
              maxWidth: to_string$67(maxWidth),
              transitionDuration: transitionDuration,
              ignoreEscapeKeyUp: Js_boolean.to_js_boolean(ignoreEscapeKeyUp),
              ignoreBackdropClick: Js_boolean.to_js_boolean(ignoreBackdropClick),
              fullScreen: Js_boolean.to_js_boolean(fullScreen),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$37, classes)),
              BackdropClassName: Js_null_undefined.from_opt(bBackdropClassName),
              BackdropComponent: bBackdropComponent,
              BackdropInvisible: Js_boolean.to_js_boolean(bBackdropInvisible),
              BackdropTransitionDuration: bBackdropTransitionDuration,
              keepMounted: Js_boolean.to_js_boolean(keepMounted),
              disableBackdrop: Js_boolean.to_js_boolean(disableBackdrop),
              modalManager: modalManager,
              show: Js_boolean.to_js_boolean(show)
            }, children);
}

var Dialog$1 = /* module */[
  /* MaxWidth */MaxWidth,
  /* Classes */Classes$37,
  /* make */make$41
];

function to_string$69(param) {
  if (param !== 0) {
    return "desc";
  } else {
    return "asc";
  }
}

var Direction$2 = /* module */[/* to_string */to_string$69];

function to_string$70(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "active";
    case 2 : 
        return "icon";
    case 3 : 
        return "desc";
    case 4 : 
        return "asc";
    
  }
}

function to_obj$38(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$70(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$38 = /* module */[
  /* to_string */to_string$70,
  /* to_obj */to_obj$38
];

function make$42(direction, className, active, theme, classes, centerRipple, component, disabled, disableRipple, focusRipple, keyboardFocusedClassName, onBlur, onClick, onFocus, onKeyboardFocus, onKeyDown, onKeyUp, onMouseDown, onMouseLeave, onMouseUp, onTouchEnd, onTouchMove, onTouchStart, role, rootRef, tabIndex, type_, children) {
  return ReasonReact.wrapJsForReason(TableSortLabel.default, {
              direction: to_string$69(direction),
              className: Js_null_undefined.from_opt(className),
              active: Js_boolean.to_js_boolean(active),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$38, classes)),
              centerRipple: Js_boolean.to_js_boolean(centerRipple),
              component: Js_null_undefined.from_opt(component),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              disableRipple: Js_boolean.to_js_boolean(disableRipple),
              focusRipple: Js_boolean.to_js_boolean(focusRipple),
              keyboardFocusedClassName: Js_null_undefined.from_opt(keyboardFocusedClassName),
              onBlur: Js_null_undefined.from_opt(onBlur),
              onClick: Js_null_undefined.from_opt(onClick),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onKeyboardFocus: Js_null_undefined.from_opt(onKeyboardFocus),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              onMouseDown: Js_null_undefined.from_opt(onMouseDown),
              onMouseLeave: Js_null_undefined.from_opt(onMouseLeave),
              onMouseUp: Js_null_undefined.from_opt(onMouseUp),
              onTouchEnd: Js_null_undefined.from_opt(onTouchEnd),
              onTouchMove: Js_null_undefined.from_opt(onTouchMove),
              onTouchStart: Js_null_undefined.from_opt(onTouchStart),
              role: Js_null_undefined.from_opt(role),
              rootRef: Js_null_undefined.from_opt(rootRef),
              tabIndex: unwrapValue(tabIndex),
              type: type_
            }, children);
}

var TableSortLabel$1 = /* module */[
  /* Direction */Direction$2,
  /* Classes */Classes$38,
  /* make */make$42
];

function to_string$71() {
  return "auto";
}

var CellHeight = /* module */[/* to_string */to_string$71];

function to_string$72() {
  return "root";
}

function to_obj$39(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$39 = /* module */[
  /* to_string */to_string$72,
  /* to_obj */to_obj$39
];

function make$43(style, spacing, component, cols, className, cellHeight, theme, classes, children) {
  return ReasonReact.wrapJsForReason(GridList.default, {
              style: Js_null_undefined.from_opt(style),
              spacing: spacing,
              component: component,
              cols: cols,
              className: Js_null_undefined.from_opt(className),
              cellHeight: typeof cellHeight === "number" || cellHeight[0] !== 770676513 ? unwrapValue(cellHeight) : unwrapValue(/* `String */[
                      -976970511,
                      "auto"
                    ]),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$39, classes))
            }, children);
}

var GridList$1 = /* module */[
  /* CellHeight */CellHeight,
  /* Classes */Classes$39,
  /* make */make$43
];

function to_string$73(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "rounded";
    case 2 : 
        return "shadow0";
    case 3 : 
        return "shadow1";
    case 4 : 
        return "shadow2";
    case 5 : 
        return "shadow3";
    case 6 : 
        return "shadow4";
    case 7 : 
        return "shadow5";
    case 8 : 
        return "shadow6";
    case 9 : 
        return "shadow7";
    case 10 : 
        return "shadow8";
    case 11 : 
        return "shadow9";
    case 12 : 
        return "shadow10";
    case 13 : 
        return "shadow11";
    case 14 : 
        return "shadow12";
    case 15 : 
        return "shadow13";
    case 16 : 
        return "shadow14";
    case 17 : 
        return "shadow15";
    case 18 : 
        return "shadow16";
    case 19 : 
        return "shadow17";
    case 20 : 
        return "shadow18";
    case 21 : 
        return "shadow19";
    case 22 : 
        return "shadow20";
    case 23 : 
        return "shadow21";
    case 24 : 
        return "shadow22";
    case 25 : 
        return "shadow23";
    case 26 : 
        return "shadow24";
    
  }
}

function to_obj$40(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$73(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$40 = /* module */[
  /* to_string */to_string$73,
  /* to_obj */to_obj$40
];

function make$44(square, elevation, component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Paper.default, {
              square: Js_boolean.to_js_boolean(square),
              elevation: elevation,
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$40, classes))
            }, children);
}

var Paper$1 = /* module */[
  /* Classes */Classes$40,
  /* make */make$44
];

function to_string$74(param) {
  if (param.tag) {
    return "row";
  } else {
    return "root";
  }
}

function to_obj$41(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$74(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$41 = /* module */[
  /* to_string */to_string$74,
  /* to_obj */to_obj$41
];

function make$45(row, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(FormGroup.default, {
              row: Js_boolean.to_js_boolean(row),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$41, classes))
            }, children);
}

var FormGroup$1 = /* module */[
  /* Classes */Classes$41,
  /* make */make$45
];

function to_string$75(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "avatar";
    case 2 : 
        return "action";
    case 3 : 
        return "content";
    case 4 : 
        return "title";
    case 5 : 
        return "subheader";
    
  }
}

function to_obj$42(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$75(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$42 = /* module */[
  /* to_string */to_string$75,
  /* to_obj */to_obj$42
];

function make$46(title, subheader, className, avatar, action, classes, children) {
  return ReasonReact.wrapJsForReason(CardHeader.default, {
              title: Js_null_undefined.from_opt(title),
              subheader: Js_null_undefined.from_opt(subheader),
              className: Js_null_undefined.from_opt(className),
              avatar: Js_null_undefined.from_opt(avatar),
              action: Js_null_undefined.from_opt(action),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$42, classes))
            }, children);
}

var CardHeader$1 = /* module */[
  /* Classes */Classes$42,
  /* make */make$46
];

function to_string$76(param) {
  if (param.tag) {
    return "gutters";
  } else {
    return "root";
  }
}

function to_obj$43(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$76(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$43 = /* module */[
  /* to_string */to_string$76,
  /* to_obj */to_obj$43
];

function make$47(disableGutters, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Toolbar.default, {
              disableGutters: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disableGutters)),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$43, classes))
            }, children);
}

var Toolbar$1 = /* module */[
  /* Classes */Classes$43,
  /* make */make$47
];

function to_string$77(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "inset";
    case 2 : 
        return "dense";
    case 3 : 
        return "text";
    case 4 : 
        return "textDense";
    
  }
}

function to_obj$44(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$77(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$44 = /* module */[
  /* to_string */to_string$77,
  /* to_obj */to_obj$44
];

function make$48(secondary, primary, inset, disableTypography, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(ListItemText.default, {
              secondary: secondary,
              primary: primary,
              inset: Js_boolean.to_js_boolean(inset),
              disableTypography: Js_boolean.to_js_boolean(disableTypography),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$44, classes))
            }, children);
}

var ListItemText$1 = /* module */[
  /* Classes */Classes$44,
  /* make */make$48
];

function to_string$78(param) {
  if (param.tag) {
    return "action";
  } else {
    return "root";
  }
}

function to_obj$45(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$78(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$45 = /* module */[
  /* to_string */to_string$78,
  /* to_obj */to_obj$45
];

function make$49(disableActionSpacing, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(CardActions.default, {
              disableActionSpacing: Js_boolean.to_js_boolean(disableActionSpacing),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$45, classes))
            }, children);
}

var CardActions$1 = /* module */[
  /* Classes */Classes$45,
  /* make */make$49
];

function to_string$79(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "default";
    case 2 : 
        return "inset";
    case 3 : 
        return "light";
    case 4 : 
        return "absolute";
    
  }
}

function to_obj$46(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$79(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$46 = /* module */[
  /* to_string */to_string$79,
  /* to_obj */to_obj$46
];

function make$50(light, inset, className, absolute, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Divider.default, {
              light: Js_boolean.to_js_boolean(light),
              inset: Js_boolean.to_js_boolean(inset),
              className: Js_null_undefined.from_opt(className),
              absolute: Js_boolean.to_js_boolean(absolute),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$46, classes))
            }, children);
}

var Divider$1 = /* module */[
  /* Classes */Classes$46,
  /* make */make$50
];

function to_string$80() {
  return "auto";
}

var Timeout$1 = /* module */[/* to_string */to_string$80];

function to_string$81(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "container";
    case 1 : 
        return "entered";
    case 2 : 
        return "wrapper";
    case 3 : 
        return "wrapperInner";
    
  }
}

function to_obj$47(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$81(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$47 = /* module */[
  /* to_string */to_string$81,
  /* to_obj */to_obj$47
];

function make$51(unmountOnExit, timeout, style, onExiting, onExit, onEntered, onEntering, onEnter, in_, containerProps, collapsedHeight, component, className, appear, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Collapse.default, {
              unmountOnExit: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, unmountOnExit)),
              timeout: typeof timeout === "number" || timeout[0] !== 770676513 ? unwrapValue(timeout) : unwrapValue(/* `String */[
                      -976970511,
                      "auto"
                    ]),
              style: Js_null_undefined.from_opt(style),
              onExiting: Js_null_undefined.from_opt(onExiting),
              onExit: Js_null_undefined.from_opt(onExit),
              onEntered: Js_null_undefined.from_opt(onEntered),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEnter: Js_null_undefined.from_opt(onEnter),
              in: Js_boolean.to_js_boolean(in_),
              containerProps: Js_null_undefined.from_opt(containerProps),
              collapsedHeight: collapsedHeight,
              component: component,
              className: Js_null_undefined.from_opt(className),
              appear: Js_boolean.to_js_boolean(appear),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$47, classes))
            }, children);
}

var Collapse$1 = /* module */[
  /* Timeout */Timeout$1,
  /* Classes */Classes$47,
  /* make */make$51
];

function make$52(onClickAway, children) {
  return ReasonReact.wrapJsForReason(ClickAwayListener.default, {
              onClickAway: onClickAway
            }, children);
}

var ClickAwayListener$1 = /* module */[/* make */make$52];

function to_string$82(param) {
  switch (param) {
    case 0 : 
        return "display4";
    case 1 : 
        return "display3";
    case 2 : 
        return "display2";
    case 3 : 
        return "display1";
    case 4 : 
        return "headline";
    case 5 : 
        return "title";
    case 6 : 
        return "subheading";
    case 7 : 
        return "body2";
    case 8 : 
        return "body1";
    case 9 : 
        return "caption";
    case 10 : 
        return "button";
    
  }
}

var Type = /* module */[/* to_string */to_string$82];

function to_string$83(param) {
  switch (param) {
    case 0 : 
        return "inherit";
    case 1 : 
        return "primary";
    case 2 : 
        return "secondary";
    case 3 : 
        return "accent";
    case 4 : 
        return "error";
    case 5 : 
        return "default";
    
  }
}

var Color$5 = /* module */[/* to_string */to_string$83];

function to_string$84(param) {
  switch (param) {
    case 0 : 
        return "inherit";
    case 1 : 
        return "left";
    case 2 : 
        return "center";
    case 3 : 
        return "right";
    case 4 : 
        return "justify";
    
  }
}

var Align = /* module */[/* to_string */to_string$84];

function to_string$85(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "display4";
    case 2 : 
        return "display3";
    case 3 : 
        return "display2";
    case 4 : 
        return "display1";
    case 5 : 
        return "headline";
    case 6 : 
        return "title";
    case 7 : 
        return "subheading";
    case 8 : 
        return "body2";
    case 9 : 
        return "body1";
    case 10 : 
        return "caption";
    case 11 : 
        return "button";
    case 12 : 
        return "alignLeft";
    case 13 : 
        return "alignCenter";
    case 14 : 
        return "alignRight";
    case 15 : 
        return "alignJustify";
    case 16 : 
        return "noWrap";
    case 17 : 
        return "gutterBottom";
    case 18 : 
        return "paragraph";
    case 19 : 
        return "colorInherit";
    case 20 : 
        return "colorPrimary";
    case 21 : 
        return "colorSecondary";
    case 22 : 
        return "colorAccent";
    case 23 : 
        return "colorError";
    
  }
}

function to_obj$48(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$85(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$48 = /* module */[
  /* to_string */to_string$85,
  /* to_obj */to_obj$48
];

function make$53(type_, paragraph, noWrap, headlineMapping, gutterBottom, color, component, className, align, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Typography.default, {
              type: to_string$82(type_),
              paragraph: Js_boolean.to_js_boolean(paragraph),
              noWrap: Js_boolean.to_js_boolean(noWrap),
              headlineMapping: headlineMapping,
              gutterBottom: Js_boolean.to_js_boolean(gutterBottom),
              color: to_string$83(color),
              component: Js_null_undefined.from_opt(component),
              className: Js_null_undefined.from_opt(className),
              align: to_string$84(align),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$48, classes))
            }, children);
}

var Typography$1 = /* module */[
  /* Type */Type,
  /* Color */Color$5,
  /* Align */Align,
  /* Classes */Classes$48,
  /* make */make$53
];

function to_string$86(param) {
  switch (param) {
    case 0 : 
        return "determinate";
    case 1 : 
        return "indeterminate";
    case 2 : 
        return "buffer";
    case 3 : 
        return "query";
    
  }
}

var Mode = /* module */[/* to_string */to_string$86];

function to_string$87(param) {
  if (param !== 0) {
    return "accent";
  } else {
    return "primary";
  }
}

var Color$6 = /* module */[/* to_string */to_string$87];

function to_string$88(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "primaryColor";
    case 2 : 
        return "primaryColorBar";
    case 3 : 
        return "primaryDashed";
    case 4 : 
        return "accentColor";
    case 5 : 
        return "accentColorBar";
    case 6 : 
        return "accentDashed";
    case 7 : 
        return "bar";
    case 8 : 
        return "dashed";
    case 9 : 
        return "bufferBar2";
    case 10 : 
        return "rootBuffer";
    case 11 : 
        return "rootQuery";
    case 12 : 
        return "indeterminateBar1";
    case 13 : 
        return "indeterminateBar2";
    case 14 : 
        return "determinateBar1";
    case 15 : 
        return "bufferBar1";
    case 16 : 
        return "bufferBar2Primary";
    case 17 : 
        return "bufferBar2Accent";
    
  }
}

function to_obj$49(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$88(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$49 = /* module */[
  /* to_string */to_string$88,
  /* to_obj */to_obj$49
];

function make$54(valueBuffer, value, mode, color, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(LinearProgress.default, {
              valueBuffer: Js_null_undefined.from_opt(valueBuffer),
              value: Js_null_undefined.from_opt(value),
              mode: to_string$86(mode),
              color: to_string$87(color),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$49, classes))
            }, children);
}

var LinearProgress$1 = /* module */[
  /* Mode */Mode,
  /* Color */Color$6,
  /* Classes */Classes$49,
  /* make */make$54
];

function to_string$89(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "focused";
    case 2 : 
        return "error";
    case 3 : 
        return "disabled";
    
  }
}

function to_obj$50(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$89(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$50 = /* module */[
  /* to_string */to_string$89,
  /* to_obj */to_obj$50
];

function make$55(required, focused, error, disabled, component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(FormLabel.default, {
              required: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, required)),
              focused: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, focused)),
              error: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, error)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$50, classes))
            }, children);
}

var FormLabel$1 = /* module */[
  /* Classes */Classes$50,
  /* make */make$55
];

function to_string$90(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "dense";
    case 2 : 
        return "error";
    case 3 : 
        return "disabled";
    
  }
}

function to_obj$51(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$90(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$51 = /* module */[
  /* to_string */to_string$90,
  /* to_obj */to_obj$51
];

function make$56(margin, error, disabled, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(FormHelperText.default, {
              margin: Js_null_undefined.from_opt(margin),
              error: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, error)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$51, classes))
            }, children);
}

var FormHelperText$1 = /* module */[
  /* Classes */Classes$51,
  /* make */make$56
];

function to_string$91(param) {
  switch (param) {
    case 0 : 
        return "default";
    case 1 : 
        return "checkbox";
    case 2 : 
        return "dense";
    case 3 : 
        return "none";
    
  }
}

var Padding = /* module */[/* to_string */to_string$91];

function to_string$92(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "toolbar";
    case 2 : 
        return "spacer";
    case 3 : 
        return "caption";
    case 4 : 
        return "input";
    case 5 : 
        return "selectRoot";
    case 6 : 
        return "select";
    case 7 : 
        return "actions";
    
  }
}

function to_obj$52(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$92(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$52 = /* module */[
  /* to_string */to_string$92,
  /* to_obj */to_obj$52
];

function make$57(rowsPerPageOptions, rowsPerPage, page, onChangeRowsPerPage, onChangePage, labelRowsPerPage, labelDisplayedRows, count, colSpan, component, theme, classes, className, numeric, padding, children) {
  return ReasonReact.wrapJsForReason(TablePagination.default, {
              rowsPerPageOptions: rowsPerPageOptions,
              rowsPerPage: rowsPerPage,
              page: page,
              onChangeRowsPerPage: onChangeRowsPerPage,
              onChangePage: onChangePage,
              labelRowsPerPage: labelRowsPerPage,
              labelDisplayedRows: labelDisplayedRows,
              count: count,
              colSpan: Js_null_undefined.from_opt(colSpan),
              component: component,
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$52, classes)),
              className: Js_null_undefined.from_opt(className),
              numeric: Js_boolean.to_js_boolean(numeric),
              padding: to_string$91(padding)
            }, children);
}

var TablePagination$1 = /* module */[
  /* Padding */Padding,
  /* Classes */Classes$52,
  /* make */make$57
];

function to_string$93(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "clickable";
    case 2 : 
        return "deletable";
    case 3 : 
        return "avatar";
    case 4 : 
        return "avatarChildren";
    case 5 : 
        return "label";
    case 6 : 
        return "deleteIcon";
    
  }
}

function to_obj$53(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$93(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$53 = /* module */[
  /* to_string */to_string$93,
  /* to_obj */to_obj$53
];

function make$58(tabIndex, onRequestDelete, onKeyDown, onClick, label, deleteIcon, className, avatar, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Chip.default, {
              tabIndex: Js_null_undefined.from_opt(optionMap(unwrapValue, tabIndex)),
              onRequestDelete: Js_null_undefined.from_opt(onRequestDelete),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onClick: Js_null_undefined.from_opt(onClick),
              label: Js_null_undefined.from_opt(label),
              deleteIcon: Js_null_undefined.from_opt(deleteIcon),
              className: Js_null_undefined.from_opt(className),
              avatar: Js_null_undefined.from_opt(avatar),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$53, classes))
            }, children);
}

var Chip$1 = /* module */[
  /* Classes */Classes$53,
  /* make */make$58
];

function to_string$94(param) {
  if (param.tag) {
    return "row";
  } else {
    return "root";
  }
}

function to_obj$54(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$94(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$54 = /* module */[
  /* to_string */to_string$94,
  /* to_obj */to_obj$54
];

function make$59(value, onKeyDown, onChange, onBlur, name, classes, theme, className, row, children) {
  return ReasonReact.wrapJsForReason(RadioGroup.default, {
              value: Js_null_undefined.from_opt(value),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onChange: Js_null_undefined.from_opt(onChange),
              onBlur: Js_null_undefined.from_opt(onBlur),
              name: Js_null_undefined.from_opt(name),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$54, classes)),
              theme: Js_null_undefined.from_opt(theme),
              className: Js_null_undefined.from_opt(className),
              row: Js_boolean.to_js_boolean(row)
            }, children);
}

var RadioGroup$1 = /* module */[
  /* Classes */Classes$54,
  /* make */make$59
];

function to_string$95(param) {
  switch (param) {
    case 0 : 
        return "default";
    case 1 : 
        return "checkbox";
    case 2 : 
        return "dense";
    case 3 : 
        return "none";
    
  }
}

var Padding$1 = /* module */[/* to_string */to_string$95];

function to_string$96(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "numeric";
    case 2 : 
        return "head";
    case 3 : 
        return "paddingDefault";
    case 4 : 
        return "paddingDense";
    case 5 : 
        return "paddingCheckbox";
    case 6 : 
        return "footer";
    
  }
}

function to_obj$55(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$96(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$55 = /* module */[
  /* to_string */to_string$96,
  /* to_obj */to_obj$55
];

function make$60(padding, numeric, component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(TableCell.default, {
              padding: to_string$95(padding),
              numeric: Js_boolean.to_js_boolean(numeric),
              component: Js_null_undefined.from_opt(component),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$55, classes))
            }, children);
}

var TableCell$1 = /* module */[
  /* Padding */Padding$1,
  /* Classes */Classes$55,
  /* make */make$60
];

function to_string$97(param) {
  if (param !== 0) {
    return "none";
  } else {
    return "dense";
  }
}

var Margin$2 = /* module */[/* to_string */to_string$97];

function to_string$98(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "formControl";
    case 2 : 
        return "inkbar";
    case 3 : 
        return "error";
    case 4 : 
        return "disabled";
    case 5 : 
        return "focused";
    case 6 : 
        return "underline";
    case 7 : 
        return "multiline";
    case 8 : 
        return "fullWidth";
    case 9 : 
        return "input";
    case 10 : 
        return "inputDense";
    case 11 : 
        return "inputDisabled";
    case 12 : 
        return "inputSingleline";
    case 13 : 
        return "inputMultiline";
    case 14 : 
        return "inputSearch";
    
  }
}

function to_obj$56(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$98(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$56 = /* module */[
  /* to_string */to_string$98,
  /* to_obj */to_obj$56
];

function make$61(value, type_, startAdornment, rowsMax, rows, placeholder, onKeyUp, onKeyDown, onFocus, onDirty, onClean, onChange, onBlur, readOnly, name, multiline, margin, inputRef, inputProps, inputComponent, id, fullWidth, error, endAdornment, disableUnderline, disabled, defaultValue, className, autoFocus, autoComplete, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Input.default, {
              value: Js_null_undefined.from_opt(optionMap(unwrapValue, value)),
              type: Js_null_undefined.from_opt(type_),
              startAdornment: Js_null_undefined.from_opt(startAdornment),
              rowsMax: Js_null_undefined.from_opt(optionMap(unwrapValue, rowsMax)),
              rows: Js_null_undefined.from_opt(optionMap(unwrapValue, rows)),
              placeholder: Js_null_undefined.from_opt(placeholder),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onDirty: Js_null_undefined.from_opt(onDirty),
              onClean: Js_null_undefined.from_opt(onClean),
              onChange: Js_null_undefined.from_opt(onChange),
              onBlur: Js_null_undefined.from_opt(onBlur),
              readOnly: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, readOnly)),
              name: Js_null_undefined.from_opt(name),
              multiline: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, multiline)),
              margin: Js_null_undefined.from_opt(optionMap(to_string$97, margin)),
              inputRef: Js_null_undefined.from_opt(inputRef),
              inputProps: Js_null_undefined.from_opt(inputProps),
              inputComponent: Js_null_undefined.from_opt(optionMap(unwrapValue, inputComponent)),
              id: Js_null_undefined.from_opt(id),
              fullWidth: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, fullWidth)),
              error: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, error)),
              endAdornment: Js_null_undefined.from_opt(endAdornment),
              disableUnderline: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disableUnderline)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              defaultValue: Js_null_undefined.from_opt(optionMap(unwrapValue, defaultValue)),
              className: Js_null_undefined.from_opt(className),
              autoFocus: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, autoFocus)),
              autoComplete: Js_null_undefined.from_opt(autoComplete),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$56, classes))
            }, children);
}

var Input$1 = /* module */[
  /* Margin */Margin$2,
  /* Classes */Classes$56,
  /* make */make$61
];

function to_string$99(param) {
  switch (param) {
    case 0 : 
        return "bottom-end";
    case 1 : 
        return "bottom-start";
    case 2 : 
        return "bottom";
    case 3 : 
        return "left-end";
    case 4 : 
        return "left-start";
    case 5 : 
        return "left";
    case 6 : 
        return "right-end";
    case 7 : 
        return "right-start";
    case 8 : 
        return "right";
    case 9 : 
        return "top-end";
    case 10 : 
        return "top-start";
    case 11 : 
        return "top";
    
  }
}

var Placement = /* module */[/* to_string */to_string$99];

function to_string$100(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "popper";
    case 2 : 
        return "popperClose";
    case 3 : 
        return "tooltip";
    case 4 : 
        return "tooltipLeft";
    case 5 : 
        return "tooltipRight";
    case 6 : 
        return "tooltipTop";
    case 7 : 
        return "tooltipBottom";
    case 8 : 
        return "tooltipOpen";
    
  }
}

function to_obj$57(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$100(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$57 = /* module */[
  /* to_string */to_string$100,
  /* to_obj */to_obj$57
];

function make$62(pPopperProps, placement, leaveDelay, enterDelay, title, open_, onRequestOpen, onRequestClose, id, disableTriggerTouch, disableTriggerHover, disableTriggerFocus, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Tooltip.default, {
              PopperProps: Js_null_undefined.from_opt(pPopperProps),
              placement: to_string$99(placement),
              leaveDelay: leaveDelay,
              enterDelay: enterDelay,
              title: title,
              open: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, open_)),
              onRequestOpen: Js_null_undefined.from_opt(onRequestOpen),
              onRequestClose: Js_null_undefined.from_opt(onRequestClose),
              id: Js_null_undefined.from_opt(id),
              disableTriggerTouch: Js_boolean.to_js_boolean(disableTriggerTouch),
              disableTriggerHover: Js_boolean.to_js_boolean(disableTriggerHover),
              disableTriggerFocus: Js_boolean.to_js_boolean(disableTriggerFocus),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$57, classes))
            }, children);
}

var Tooltip$1 = /* module */[
  /* Placement */Placement,
  /* Classes */Classes$57,
  /* make */make$62
];

function to_string$101(param) {
  switch (param) {
    case 0 : 
        return "static";
    case 1 : 
        return "fixed";
    case 2 : 
        return "absolute";
    
  }
}

var Position$1 = /* module */[/* to_string */to_string$101];

function to_string$102(param) {
  switch (param) {
    case 0 : 
        return "inherit";
    case 1 : 
        return "primary";
    case 2 : 
        return "accent";
    case 3 : 
        return "default";
    
  }
}

var Color$7 = /* module */[/* to_string */to_string$102];

function to_string$103(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "positionFixed";
    case 2 : 
        return "positionAbsolute";
    case 3 : 
        return "positionStatic";
    case 4 : 
        return "colorDefault";
    case 5 : 
        return "colorPrimary";
    case 6 : 
        return "colorAccent";
    
  }
}

function to_obj$58(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$103(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$58 = /* module */[
  /* to_string */to_string$103,
  /* to_obj */to_obj$58
];

function make$63(position, color, className, theme, classes, component, elevation, square, children) {
  return ReasonReact.wrapJsForReason(AppBar.default, {
              position: to_string$101(position),
              color: to_string$102(color),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$58, classes)),
              component: component,
              elevation: elevation,
              square: Js_boolean.to_js_boolean(square)
            }, children);
}

var AppBar$1 = /* module */[
  /* Position */Position$1,
  /* Color */Color$7,
  /* Classes */Classes$58,
  /* make */make$63
];

function to_string$104(param) {
  switch (param) {
    case 0 : 
        return "text";
    case 1 : 
        return "dots";
    case 2 : 
        return "progress";
    
  }
}

var Type$1 = /* module */[/* to_string */to_string$104];

function to_string$105(param) {
  switch (param) {
    case 0 : 
        return "bottom";
    case 1 : 
        return "top";
    case 2 : 
        return "static";
    
  }
}

var Position$2 = /* module */[/* to_string */to_string$105];

function to_string$106(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "positionBottom";
    case 2 : 
        return "positionTop";
    case 3 : 
        return "positionStatic";
    case 4 : 
        return "dots";
    case 5 : 
        return "dot";
    case 6 : 
        return "dotActive";
    case 7 : 
        return "progress";
    
  }
}

function to_obj$59(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$106(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$59 = /* module */[
  /* to_string */to_string$106,
  /* to_obj */to_obj$59
];

function make$64(type_, steps, position, nextButton, className, backButton, activeStep, theme, classes, component, elevation, square, children) {
  return ReasonReact.wrapJsForReason(MobileStepper.default, {
              type: Js_null_undefined.from_opt(optionMap(to_string$104, type_)),
              steps: steps,
              position: Js_null_undefined.from_opt(optionMap(to_string$105, position)),
              nextButton: nextButton,
              className: Js_null_undefined.from_opt(className),
              backButton: backButton,
              activeStep: Js_null_undefined.from_opt(activeStep),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$59, classes)),
              component: component,
              elevation: elevation,
              square: Js_boolean.to_js_boolean(square)
            }, children);
}

var MobileStepper$1 = /* module */[
  /* Type */Type$1,
  /* Position */Position$2,
  /* Classes */Classes$59,
  /* make */make$64
];

function to_string$107(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "formControl";
    case 2 : 
        return "labelDense";
    case 3 : 
        return "shrink";
    case 4 : 
        return "animated";
    case 5 : 
        return "disabled";
    
  }
}

function to_obj$60(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$107(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$60 = /* module */[
  /* to_string */to_string$107,
  /* to_obj */to_obj$60
];

function make$65(shrink, required, margin, focused, fFormControlClasses, error, disabled, disableAnimation, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(InputLabel.default, {
              shrink: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, shrink)),
              required: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, required)),
              margin: Js_null_undefined.from_opt(margin),
              focused: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, focused)),
              FormControlClasses: Js_null_undefined.from_opt(fFormControlClasses),
              error: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, error)),
              disabled: Js_boolean.to_js_boolean(disabled),
              disableAnimation: Js_boolean.to_js_boolean(disableAnimation),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$60, classes))
            }, children);
}

var InputLabel$1 = /* module */[
  /* Classes */Classes$60,
  /* make */make$65
];

function to_string$108(param) {
  switch (param) {
    case 0 : 
        return "none";
    case 1 : 
        return "dense";
    case 2 : 
        return "normal";
    
  }
}

var Margin$3 = /* module */[/* to_string */to_string$108];

function to_string$109(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "marginNormal";
    case 2 : 
        return "marginDense";
    case 3 : 
        return "fullWidth";
    
  }
}

function to_obj$61(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$109(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$61 = /* module */[
  /* to_string */to_string$109,
  /* to_obj */to_obj$61
];

function make$66(required, onFocus, onBlur, margin, fullWidth, error, disabled, component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(FormControl.default, {
              required: Js_boolean.to_js_boolean(required),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onBlur: Js_null_undefined.from_opt(onBlur),
              margin: to_string$108(margin),
              fullWidth: Js_boolean.to_js_boolean(fullWidth),
              error: Js_boolean.to_js_boolean(error),
              disabled: Js_boolean.to_js_boolean(disabled),
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$61, classes))
            }, children);
}

var FormControl$1 = /* module */[
  /* Margin */Margin$3,
  /* Classes */Classes$61,
  /* make */make$66
];

function to_string$110(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "horizontal";
    case 2 : 
        return "alternativeLabel";
    
  }
}

function to_obj$62(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$110(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$62 = /* module */[
  /* to_string */to_string$110,
  /* to_obj */to_obj$62
];

function make$67(orientation, last, index, connector, className, alternativeLabel, optional, disabled, classes, completed, active, children) {
  return ReasonReact.wrapJsForReason(Step.default, {
              orientation: Js_null_undefined.from_opt(orientation),
              last: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, last)),
              index: Js_null_undefined.from_opt(index),
              connector: Js_null_undefined.from_opt(connector),
              className: Js_null_undefined.from_opt(className),
              alternativeLabel: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, alternativeLabel)),
              optional: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, optional)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$62, classes)),
              completed: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, completed)),
              active: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, active))
            }, children);
}

var Step$1 = /* module */[
  /* Classes */Classes$62,
  /* make */make$67
];

function to_string$111(param) {
  if (param.tag) {
    return "selected";
  } else {
    return "root";
  }
}

function to_obj$63(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$111(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$63 = /* module */[
  /* to_string */to_string$111,
  /* to_obj */to_obj$63
];

function make$68(selected, role, component, className, theme, classes, button, dense, disabled, disableGutters, divider, children) {
  return ReasonReact.wrapJsForReason(MenuItem.default, {
              selected: Js_boolean.to_js_boolean(selected),
              role: role,
              component: Js_null_undefined.from_opt(component),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$63, classes)),
              button: Js_boolean.to_js_boolean(button),
              dense: Js_boolean.to_js_boolean(dense),
              disabled: Js_boolean.to_js_boolean(disabled),
              disableGutters: Js_boolean.to_js_boolean(disableGutters),
              divider: Js_boolean.to_js_boolean(divider)
            }, children);
}

var MenuItem$1 = /* module */[
  /* Classes */Classes$63,
  /* make */make$68
];

function to_string$112(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "last";
    case 2 : 
        return "transition";
    
  }
}

function to_obj$64(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$112(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$64 = /* module */[
  /* to_string */to_string$112,
  /* to_obj */to_obj$64
];

function make$69(orientation, optional, last, completed, className, alternativeLabel, active, transitionDuration, transition, classes, children) {
  return ReasonReact.wrapJsForReason(StepContent.default, {
              orientation: Js_null_undefined.from_opt(orientation),
              optional: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, optional)),
              last: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, last)),
              completed: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, completed)),
              className: Js_null_undefined.from_opt(className),
              alternativeLabel: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, alternativeLabel)),
              active: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, active)),
              transitionDuration: Js_null_undefined.from_opt(transitionDuration),
              transition: Js_null_undefined.from_opt(transition),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$64, classes))
            }, children);
}

var StepContent$1 = /* module */[
  /* Classes */Classes$64,
  /* make */make$69
];

function to_string$113(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "selected";
    case 2 : 
        return "selectedIconOnly";
    case 3 : 
        return "wrapper";
    case 4 : 
        return "label";
    case 5 : 
        return "selectedLabel";
    case 6 : 
        return "hiddenLabel";
    case 7 : 
        return "icon";
    
  }
}

function to_obj$65(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$113(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$65 = /* module */[
  /* to_string */to_string$113,
  /* to_obj */to_obj$65
];

function make$70(value, showLabel, selected, onClick, onChange, label, icon, className, theme, classes, centerRipple, component, disabled, disableRipple, focusRipple, keyboardFocusedClassName, onBlur, onFocus, onKeyboardFocus, onKeyDown, onKeyUp, onMouseDown, onMouseLeave, onMouseUp, onTouchEnd, onTouchMove, onTouchStart, role, rootRef, tabIndex, type_, children) {
  return ReasonReact.wrapJsForReason(BottomNavigationButton.default, {
              value: Js_null_undefined.from_opt(value),
              showLabel: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, showLabel)),
              selected: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, selected)),
              onClick: Js_null_undefined.from_opt(onClick),
              onChange: Js_null_undefined.from_opt(onChange),
              label: Js_null_undefined.from_opt(label),
              icon: Js_null_undefined.from_opt(optionMap(unwrapValue, icon)),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$65, classes)),
              centerRipple: Js_boolean.to_js_boolean(centerRipple),
              component: Js_null_undefined.from_opt(component),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              disableRipple: Js_boolean.to_js_boolean(disableRipple),
              focusRipple: Js_boolean.to_js_boolean(focusRipple),
              keyboardFocusedClassName: Js_null_undefined.from_opt(keyboardFocusedClassName),
              onBlur: Js_null_undefined.from_opt(onBlur),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onKeyboardFocus: Js_null_undefined.from_opt(onKeyboardFocus),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              onMouseDown: Js_null_undefined.from_opt(onMouseDown),
              onMouseLeave: Js_null_undefined.from_opt(onMouseLeave),
              onMouseUp: Js_null_undefined.from_opt(onMouseUp),
              onTouchEnd: Js_null_undefined.from_opt(onTouchEnd),
              onTouchMove: Js_null_undefined.from_opt(onTouchMove),
              onTouchStart: Js_null_undefined.from_opt(onTouchStart),
              role: Js_null_undefined.from_opt(role),
              rootRef: Js_null_undefined.from_opt(rootRef),
              tabIndex: unwrapValue(tabIndex),
              type: type_
            }, children);
}

var BottomNavigationButton$1 = /* module */[
  /* Classes */Classes$65,
  /* make */make$70
];

function to_string$114(param) {
  if (param.tag) {
    return "hidden";
  } else {
    return "root";
  }
}

function to_obj$66(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$114(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$66 = /* module */[
  /* to_string */to_string$114,
  /* to_obj */to_obj$66
];

function make$71(show, onRequestClose, onExited, onExiting, onExit, onEscapeKeyUp, onEntered, onEntering, onEnter, onBackdropClick, modalManager, ignoreEscapeKeyUp, ignoreBackdropClick, disableBackdrop, keepMounted, className, bBackdropTransitionDuration, bBackdropInvisible, bBackdropComponent, bBackdropClassName, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Modal.default, {
              show: Js_boolean.to_js_boolean(show),
              onRequestClose: Js_null_undefined.from_opt(onRequestClose),
              onExited: Js_null_undefined.from_opt(onExited),
              onExiting: Js_null_undefined.from_opt(onExiting),
              onExit: Js_null_undefined.from_opt(onExit),
              onEscapeKeyUp: Js_null_undefined.from_opt(onEscapeKeyUp),
              onEntered: Js_null_undefined.from_opt(onEntered),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEnter: Js_null_undefined.from_opt(onEnter),
              onBackdropClick: Js_null_undefined.from_opt(onBackdropClick),
              modalManager: modalManager,
              ignoreEscapeKeyUp: Js_boolean.to_js_boolean(ignoreEscapeKeyUp),
              ignoreBackdropClick: Js_boolean.to_js_boolean(ignoreBackdropClick),
              disableBackdrop: Js_boolean.to_js_boolean(disableBackdrop),
              keepMounted: Js_boolean.to_js_boolean(keepMounted),
              className: Js_null_undefined.from_opt(className),
              BackdropTransitionDuration: bBackdropTransitionDuration,
              BackdropInvisible: Js_boolean.to_js_boolean(bBackdropInvisible),
              BackdropComponent: bBackdropComponent,
              BackdropClassName: Js_null_undefined.from_opt(bBackdropClassName),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$66, classes))
            }, children);
}

var Modal$1 = /* module */[
  /* Classes */Classes$66,
  /* make */make$71
];

function to_string$115(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "tile";
    case 2 : 
        return "imgFullHeight";
    case 3 : 
        return "imgFullWidth";
    
  }
}

function to_obj$67(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$115(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$67 = /* module */[
  /* to_string */to_string$115,
  /* to_obj */to_obj$67
];

function make$72(rows, component, cols, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(GridListTile.default, {
              rows: Js_null_undefined.from_opt(rows),
              component: Js_null_undefined.from_opt(component),
              cols: Js_null_undefined.from_opt(cols),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$67, classes))
            }, children);
}

var GridListTile$1 = /* module */[
  /* Classes */Classes$67,
  /* make */make$72
];

function to_string$116(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "expanded";
    case 2 : 
        return "disabled";
    
  }
}

function to_obj$68(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$116(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$68 = /* module */[
  /* to_string */to_string$116,
  /* to_obj */to_obj$68
];

function make$73(onChange, expanded, cCollapseProps, className, theme, disabled, defaultExpanded, classes, component, elevation, square, children) {
  return ReasonReact.wrapJsForReason(ExpansionPanel.default, {
              onChange: Js_null_undefined.from_opt(onChange),
              expanded: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, expanded)),
              CollapseProps: Js_null_undefined.from_opt(cCollapseProps),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              disabled: Js_boolean.to_js_boolean(disabled),
              defaultExpanded: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, defaultExpanded)),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$68, classes)),
              component: component,
              elevation: elevation,
              square: Js_boolean.to_js_boolean(square)
            }, children);
}

var ExpansionPanel$1 = /* module */[
  /* Classes */Classes$68,
  /* make */make$73
];

function to_string$117(param) {
  if (param !== 0) {
    return "css";
  } else {
    return "js";
  }
}

var Implementation = /* module */[/* to_string */to_string$117];

function make$74(initialWidth, implementation, xlDown, lgDown, mdDown, smDown, xsDown, xlUp, lgUp, mdUp, smUp, xsUp, only, className, children) {
  return ReasonReact.wrapJsForReason(Hidden.default, {
              initialWidth: Js_null_undefined.from_opt(initialWidth),
              implementation: Js_null_undefined.from_opt(optionMap(to_string$117, implementation)),
              xlDown: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, xlDown)),
              lgDown: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, lgDown)),
              mdDown: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, mdDown)),
              smDown: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, smDown)),
              xsDown: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, xsDown)),
              xlUp: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, xlUp)),
              lgUp: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, lgUp)),
              mdUp: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, mdUp)),
              smUp: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, smUp)),
              xsUp: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, xsUp)),
              only: Js_null_undefined.from_opt(optionMap(unwrapValue, only)),
              className: Js_null_undefined.from_opt(className)
            }, children);
}

var Hidden$1 = /* module */[
  /* Implementation */Implementation,
  /* make */make$74
];

function to_string$118(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "action";
    case 2 : 
        return "button";
    
  }
}

function to_obj$69(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$118(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$69 = /* module */[
  /* to_string */to_string$118,
  /* to_obj */to_obj$69
];

function make$75(className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(DialogActions.default, {
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$69, classes))
            }, children);
}

var DialogActions$1 = /* module */[
  /* Classes */Classes$69,
  /* make */make$75
];

function to_string$119() {
  return "root";
}

function to_obj$70(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$70 = /* module */[
  /* to_string */to_string$119,
  /* to_obj */to_obj$70
];

function make$76(className, classes, children) {
  return ReasonReact.wrapJsForReason(ListItemSecondaryAction.default, {
              className: Js_null_undefined.from_opt(className),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$70, classes))
            }, children);
}

var ListItemSecondaryAction$1 = /* module */[
  /* Classes */Classes$70,
  /* make */make$76
];

function to_string$120(param) {
  switch (param) {
    case 0 : 
        return "accent";
    case 1 : 
        return "primary";
    case 2 : 
        return "inherit";
    
  }
}

var TextColor$1 = /* module */[/* to_string */to_string$120];

function to_string$121(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "rootLabelIcon";
    case 2 : 
        return "rootAccent";
    case 3 : 
        return "rootAccentSelected";
    case 4 : 
        return "rootAccentDisabled";
    case 5 : 
        return "rootPrimary";
    case 6 : 
        return "rootPrimarySelected";
    case 7 : 
        return "rootPrimaryDisabled";
    case 8 : 
        return "rootInherit";
    case 9 : 
        return "rootInheritSelected";
    case 10 : 
        return "rootInheritDisabled";
    case 11 : 
        return "fullWidth";
    case 12 : 
        return "wrapper";
    case 13 : 
        return "labelContainer";
    case 14 : 
        return "label";
    case 15 : 
        return "labelWrapped";
    
  }
}

function to_obj$71(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$121(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$71 = /* module */[
  /* to_string */to_string$121,
  /* to_obj */to_obj$71
];

function make$77(value, textColor, style, selected, onClick, onChange, label, indicator, icon, fullWidth, disabled, className, theme, classes, centerRipple, component, disableRipple, focusRipple, keyboardFocusedClassName, onBlur, onFocus, onKeyboardFocus, onKeyDown, onKeyUp, onMouseDown, onMouseLeave, onMouseUp, onTouchEnd, onTouchMove, onTouchStart, role, rootRef, tabIndex, type_, children) {
  return ReasonReact.wrapJsForReason(Tab.default, {
              value: Js_null_undefined.from_opt(value),
              textColor: Js_null_undefined.from_opt(optionMap((function (x) {
                          if (typeof x === "number" || x[0] !== 770676513) {
                            return unwrapValue(x);
                          } else {
                            return unwrapValue(/* `String */[
                                        -976970511,
                                        to_string$120(x[1])
                                      ]);
                          }
                        }), textColor)),
              style: Js_null_undefined.from_opt(style),
              selected: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, selected)),
              onClick: Js_null_undefined.from_opt(onClick),
              onChange: Js_null_undefined.from_opt(onChange),
              label: Js_null_undefined.from_opt(optionMap(unwrapValue, label)),
              indicator: Js_null_undefined.from_opt(optionMap(unwrapValue, indicator)),
              icon: Js_null_undefined.from_opt(optionMap(unwrapValue, icon)),
              fullWidth: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, fullWidth)),
              disabled: Js_boolean.to_js_boolean(disabled),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$71, classes)),
              centerRipple: Js_boolean.to_js_boolean(centerRipple),
              component: Js_null_undefined.from_opt(component),
              disableRipple: Js_boolean.to_js_boolean(disableRipple),
              focusRipple: Js_boolean.to_js_boolean(focusRipple),
              keyboardFocusedClassName: Js_null_undefined.from_opt(keyboardFocusedClassName),
              onBlur: Js_null_undefined.from_opt(onBlur),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onKeyboardFocus: Js_null_undefined.from_opt(onKeyboardFocus),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              onMouseDown: Js_null_undefined.from_opt(onMouseDown),
              onMouseLeave: Js_null_undefined.from_opt(onMouseLeave),
              onMouseUp: Js_null_undefined.from_opt(onMouseUp),
              onTouchEnd: Js_null_undefined.from_opt(onTouchEnd),
              onTouchMove: Js_null_undefined.from_opt(onTouchMove),
              onTouchStart: Js_null_undefined.from_opt(onTouchStart),
              role: Js_null_undefined.from_opt(role),
              rootRef: Js_null_undefined.from_opt(rootRef),
              tabIndex: unwrapValue(tabIndex),
              type: type_
            }, children);
}

var Tab$1 = /* module */[
  /* TextColor */TextColor$1,
  /* Classes */Classes$71,
  /* make */make$77
];

function to_string$122() {
  return "root";
}

function to_obj$72(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$72 = /* module */[
  /* to_string */to_string$122,
  /* to_obj */to_obj$72
];

function make$78(className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(ListItemIcon.default, {
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$72, classes))
            }, children);
}

var ListItemIcon$1 = /* module */[
  /* Classes */Classes$72,
  /* make */make$78
];

function to_string$123(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "expanded";
    case 2 : 
        return "focused";
    case 3 : 
        return "disabled";
    case 4 : 
        return "content";
    case 5 : 
        return "contentExpanded";
    case 6 : 
        return "expandIcon";
    case 7 : 
        return "expandIconExpanded";
    
  }
}

function to_obj$73(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$123(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$73 = /* module */[
  /* to_string */to_string$123,
  /* to_obj */to_obj$73
];

function make$79(onClick, onChange, expandIcon, expanded, disabled, className, theme, classes, centerRipple, component, disableRipple, focusRipple, keyboardFocusedClassName, onBlur, onFocus, onKeyboardFocus, onKeyDown, onKeyUp, onMouseDown, onMouseLeave, onMouseUp, onTouchEnd, onTouchMove, onTouchStart, role, rootRef, tabIndex, type_, children) {
  return ReasonReact.wrapJsForReason(ExpansionPanelSummary.default, {
              onClick: Js_null_undefined.from_opt(onClick),
              onChange: Js_null_undefined.from_opt(onChange),
              expandIcon: Js_null_undefined.from_opt(expandIcon),
              expanded: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, expanded)),
              disabled: Js_boolean.to_js_boolean(disabled),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$73, classes)),
              centerRipple: Js_boolean.to_js_boolean(centerRipple),
              component: Js_null_undefined.from_opt(component),
              disableRipple: Js_boolean.to_js_boolean(disableRipple),
              focusRipple: Js_boolean.to_js_boolean(focusRipple),
              keyboardFocusedClassName: Js_null_undefined.from_opt(keyboardFocusedClassName),
              onBlur: Js_null_undefined.from_opt(onBlur),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onKeyboardFocus: Js_null_undefined.from_opt(onKeyboardFocus),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              onMouseDown: Js_null_undefined.from_opt(onMouseDown),
              onMouseLeave: Js_null_undefined.from_opt(onMouseLeave),
              onMouseUp: Js_null_undefined.from_opt(onMouseUp),
              onTouchEnd: Js_null_undefined.from_opt(onTouchEnd),
              onTouchMove: Js_null_undefined.from_opt(onTouchMove),
              onTouchStart: Js_null_undefined.from_opt(onTouchStart),
              role: Js_null_undefined.from_opt(role),
              rootRef: Js_null_undefined.from_opt(rootRef),
              tabIndex: unwrapValue(tabIndex),
              type: type_
            }, children);
}

var ExpansionPanelSummary$1 = /* module */[
  /* Classes */Classes$73,
  /* make */make$79
];

function to_string$124(param) {
  switch (param) {
    case 0 : 
        return "left";
    case 1 : 
        return "right";
    case 2 : 
        return "up";
    case 3 : 
        return "down";
    
  }
}

var Direction$3 = /* module */[/* to_string */to_string$124];

function make$80(timeout, style, onExited, onExiting, onExit, onEntered, onEntering, onEnter, in_, direction, theme, children) {
  return ReasonReact.wrapJsForReason(Slide.default, {
              timeout: timeout,
              style: Js_null_undefined.from_opt(style),
              onExited: Js_null_undefined.from_opt(onExited),
              onExiting: Js_null_undefined.from_opt(onExiting),
              onExit: Js_null_undefined.from_opt(onExit),
              onEntered: Js_null_undefined.from_opt(onEntered),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEnter: Js_null_undefined.from_opt(onEnter),
              in: Js_boolean.to_js_boolean(in_),
              direction: to_string$124(direction),
              theme: theme
            }, children);
}

var Slide$1 = /* module */[
  /* Direction */Direction$3,
  /* make */make$80
];

function to_string$125(param) {
  switch (param) {
    case 0 : 
        return "permanent";
    case 1 : 
        return "persistent";
    case 2 : 
        return "temporary";
    
  }
}

var Type$2 = /* module */[/* to_string */to_string$125];

function to_string$126(param) {
  switch (param) {
    case 0 : 
        return "left";
    case 1 : 
        return "top";
    case 2 : 
        return "right";
    case 3 : 
        return "bottom";
    
  }
}

var Anchor = /* module */[/* to_string */to_string$126];

function to_string$127(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "docked";
    case 1 : 
        return "paper";
    case 2 : 
        return "paperAnchorLeft";
    case 3 : 
        return "paperAnchorRight";
    case 4 : 
        return "paperAnchorTop";
    case 5 : 
        return "paperAnchorBottom";
    case 6 : 
        return "paperAnchorDockedLeft";
    case 7 : 
        return "paperAnchorDockedTop";
    case 8 : 
        return "paperAnchorDockedRight";
    case 9 : 
        return "paperAnchorDockedBottom";
    case 10 : 
        return "modal";
    
  }
}

function to_obj$74(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$127(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$74 = /* module */[
  /* to_string */to_string$127,
  /* to_obj */to_obj$74
];

function make$81(type_, sSlideProps, open_, onRequestClose, mModalProps, transitionDuration, elevation, className, anchor, theme, classes, bBackdropClassName, bBackdropComponent, bBackdropInvisible, bBackdropTransitionDuration, keepMounted, disableBackdrop, ignoreBackdropClick, ignoreEscapeKeyUp, modalManager, onBackdropClick, onEnter, onEntering, onEntered, onEscapeKeyUp, onExit, onExiting, onExited, show, children) {
  return ReasonReact.wrapJsForReason(Drawer.default, {
              type: to_string$125(type_),
              SlideProps: Js_null_undefined.from_opt(sSlideProps),
              open: Js_boolean.to_js_boolean(open_),
              onRequestClose: Js_null_undefined.from_opt(onRequestClose),
              ModalProps: Js_null_undefined.from_opt(mModalProps),
              transitionDuration: transitionDuration,
              elevation: elevation,
              className: Js_null_undefined.from_opt(className),
              anchor: to_string$126(anchor),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$74, classes)),
              BackdropClassName: Js_null_undefined.from_opt(bBackdropClassName),
              BackdropComponent: bBackdropComponent,
              BackdropInvisible: Js_boolean.to_js_boolean(bBackdropInvisible),
              BackdropTransitionDuration: bBackdropTransitionDuration,
              keepMounted: Js_boolean.to_js_boolean(keepMounted),
              disableBackdrop: Js_boolean.to_js_boolean(disableBackdrop),
              ignoreBackdropClick: Js_boolean.to_js_boolean(ignoreBackdropClick),
              ignoreEscapeKeyUp: Js_boolean.to_js_boolean(ignoreEscapeKeyUp),
              modalManager: modalManager,
              onBackdropClick: Js_null_undefined.from_opt(onBackdropClick),
              onEnter: Js_null_undefined.from_opt(onEnter),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEntered: Js_null_undefined.from_opt(onEntered),
              onEscapeKeyUp: Js_null_undefined.from_opt(onEscapeKeyUp),
              onExit: Js_null_undefined.from_opt(onExit),
              onExiting: Js_null_undefined.from_opt(onExiting),
              onExited: Js_null_undefined.from_opt(onExited),
              show: Js_boolean.to_js_boolean(show)
            }, children);
}

var Drawer$1 = /* module */[
  /* Type */Type$2,
  /* Anchor */Anchor,
  /* Classes */Classes$74,
  /* make */make$81
];

function to_string$128(param) {
  if (param.tag) {
    return "alternativeLabel";
  } else {
    return "root";
  }
}

function to_obj$75(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$128(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$75 = /* module */[
  /* to_string */to_string$128,
  /* to_obj */to_obj$75
];

function make$82(orientation, optional, last, icon, disabled, completed, className, alternativeLabel, active, classes, theme, centerRipple, component, disableRipple, focusRipple, keyboardFocusedClassName, onBlur, onClick, onFocus, onKeyboardFocus, onKeyDown, onKeyUp, onMouseDown, onMouseLeave, onMouseUp, onTouchEnd, onTouchMove, onTouchStart, role, rootRef, tabIndex, type_, children) {
  return ReasonReact.wrapJsForReason(StepButton.default, {
              orientation: orientation,
              optional: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, optional)),
              last: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, last)),
              icon: Js_null_undefined.from_opt(optionMap(unwrapValue, icon)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              completed: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, completed)),
              className: Js_null_undefined.from_opt(className),
              alternativeLabel: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, alternativeLabel)),
              active: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, active)),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$75, classes)),
              theme: Js_null_undefined.from_opt(theme),
              centerRipple: Js_boolean.to_js_boolean(centerRipple),
              component: Js_null_undefined.from_opt(component),
              disableRipple: Js_boolean.to_js_boolean(disableRipple),
              focusRipple: Js_boolean.to_js_boolean(focusRipple),
              keyboardFocusedClassName: Js_null_undefined.from_opt(keyboardFocusedClassName),
              onBlur: Js_null_undefined.from_opt(onBlur),
              onClick: Js_null_undefined.from_opt(onClick),
              onFocus: Js_null_undefined.from_opt(onFocus),
              onKeyboardFocus: Js_null_undefined.from_opt(onKeyboardFocus),
              onKeyDown: Js_null_undefined.from_opt(onKeyDown),
              onKeyUp: Js_null_undefined.from_opt(onKeyUp),
              onMouseDown: Js_null_undefined.from_opt(onMouseDown),
              onMouseLeave: Js_null_undefined.from_opt(onMouseLeave),
              onMouseUp: Js_null_undefined.from_opt(onMouseUp),
              onTouchEnd: Js_null_undefined.from_opt(onTouchEnd),
              onTouchMove: Js_null_undefined.from_opt(onTouchMove),
              onTouchStart: Js_null_undefined.from_opt(onTouchStart),
              role: Js_null_undefined.from_opt(role),
              rootRef: Js_null_undefined.from_opt(rootRef),
              tabIndex: unwrapValue(tabIndex),
              type: type_
            }, children);
}

var StepButton$1 = /* module */[
  /* Classes */Classes$75,
  /* make */make$82
];

function to_string$129(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "anchorTopCenter";
    case 2 : 
        return "anchorBottomCenter";
    case 3 : 
        return "anchorTopRight";
    case 4 : 
        return "anchorBottomRight";
    case 5 : 
        return "anchorTopLeft";
    case 6 : 
        return "anchorBottomLeft";
    
  }
}

function to_obj$76(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$129(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$76 = /* module */[
  /* to_string */to_string$129,
  /* to_obj */to_obj$76
];

function make$83(transitionDuration, transition, sSnackbarContentProps, open_, onRequestClose, onMouseLeave, onMouseEnter, onExited, onExiting, onExit, onEntered, onEntering, onEnter, message, className, resumeHideDuration, autoHideDuration, anchorOrigin, action, theme, classes, children) {
  return ReasonReact.wrapJsForReason(Snackbar.default, {
              transitionDuration: transitionDuration,
              transition: Js_null_undefined.from_opt(transition),
              SnackbarContentProps: Js_null_undefined.from_opt(sSnackbarContentProps),
              open: Js_boolean.to_js_boolean(open_),
              onRequestClose: Js_null_undefined.from_opt(onRequestClose),
              onMouseLeave: Js_null_undefined.from_opt(onMouseLeave),
              onMouseEnter: Js_null_undefined.from_opt(onMouseEnter),
              onExited: Js_null_undefined.from_opt(onExited),
              onExiting: Js_null_undefined.from_opt(onExiting),
              onExit: Js_null_undefined.from_opt(onExit),
              onEntered: Js_null_undefined.from_opt(onEntered),
              onEntering: Js_null_undefined.from_opt(onEntering),
              onEnter: Js_null_undefined.from_opt(onEnter),
              message: Js_null_undefined.from_opt(message),
              className: Js_null_undefined.from_opt(className),
              resumeHideDuration: Js_null_undefined.from_opt(resumeHideDuration),
              autoHideDuration: Js_null_undefined.from_opt(autoHideDuration),
              anchorOrigin: anchorOrigin,
              action: Js_null_undefined.from_opt(action),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$76, classes))
            }, children);
}

var Snackbar$1 = /* module */[
  /* Classes */Classes$76,
  /* make */make$83
];

function to_string$130(param) {
  if (param !== 0) {
    return "indeterminate";
  } else {
    return "determinate";
  }
}

var Mode$1 = /* module */[/* to_string */to_string$130];

function to_string$131(param) {
  switch (param) {
    case 0 : 
        return "primary";
    case 1 : 
        return "accent";
    case 2 : 
        return "inherit";
    
  }
}

var Color$8 = /* module */[/* to_string */to_string$131];

function to_string$132(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "primaryColor";
    case 2 : 
        return "accentColor";
    case 3 : 
        return "svgIndeterminate";
    case 4 : 
        return "svgDeterminate";
    case 5 : 
        return "circle";
    case 6 : 
        return "circleIndeterminate";
    
  }
}

function to_obj$77(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$132(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$77 = /* module */[
  /* to_string */to_string$132,
  /* to_obj */to_obj$77
];

function make$84(value, thickness, style, size, mode, min, max, color, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(CircularProgress.default, {
              value: value,
              thickness: thickness,
              style: Js_null_undefined.from_opt(style),
              size: size,
              mode: to_string$130(mode),
              min: min,
              max: max,
              color: to_string$131(color),
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$77, classes))
            }, children);
}

var CircularProgress$1 = /* module */[
  /* Mode */Mode$1,
  /* Color */Color$8,
  /* Classes */Classes$77,
  /* make */make$84
];

function to_string$133(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "bar";
    case 2 : 
        return "icon";
    case 3 : 
        return "default";
    case 4 : 
        return "checked";
    case 5 : 
        return "disabled";
    
  }
}

function to_obj$78(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$133(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$78 = /* module */[
  /* to_string */to_string$133,
  /* to_obj */to_obj$78
];

function make$85(value, tabIndex, onChange, name, inputRef, inputProps, icon, disableRipple, disabled, defaultChecked, className, checkedIcon, checked, classes, children) {
  return ReasonReact.wrapJsForReason(Switch.default, {
              value: Js_null_undefined.from_opt(value),
              tabIndex: Js_null_undefined.from_opt(optionMap(unwrapValue, tabIndex)),
              onChange: Js_null_undefined.from_opt(onChange),
              name: Js_null_undefined.from_opt(name),
              inputRef: Js_null_undefined.from_opt(inputRef),
              inputProps: Js_null_undefined.from_opt(inputProps),
              icon: Js_null_undefined.from_opt(icon),
              disableRipple: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disableRipple)),
              disabled: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, disabled)),
              defaultChecked: Js_null_undefined.from_opt(optionMap(Js_boolean.to_js_boolean, defaultChecked)),
              className: Js_null_undefined.from_opt(className),
              checkedIcon: Js_null_undefined.from_opt(checkedIcon),
              checked: Js_null_undefined.from_opt(optionMap(unwrapValue, checked)),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$78, classes))
            }, children);
}

var Switch$1 = /* module */[
  /* Classes */Classes$78,
  /* make */make$85
];

function to_string$134() {
  return "root";
}

function to_obj$79(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$79 = /* module */[
  /* to_string */to_string$134,
  /* to_obj */to_obj$79
];

function make$86(component, className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(TableHead.default, {
              component: component,
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$79, classes))
            }, children);
}

var TableHead$1 = /* module */[
  /* Classes */Classes$79,
  /* make */make$86
];

function to_string$135(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "message";
    case 2 : 
        return "action";
    
  }
}

function to_obj$80(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj[to_string$135(classType)] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$80 = /* module */[
  /* to_string */to_string$135,
  /* to_obj */to_obj$80
];

function make$87(message, className, action, classes, theme, component, elevation, square, children) {
  return ReasonReact.wrapJsForReason(SnackbarContent.default, {
              message: message,
              className: Js_null_undefined.from_opt(className),
              action: Js_null_undefined.from_opt(action),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$80, classes)),
              theme: Js_null_undefined.from_opt(theme),
              component: component,
              elevation: elevation,
              square: Js_boolean.to_js_boolean(square)
            }, children);
}

var SnackbarContent$1 = /* module */[
  /* Classes */Classes$80,
  /* make */make$87
];

function to_string$136() {
  return "root";
}

function to_obj$81(listOfClasses) {
  return ListLabels.fold_left((function (obj, classType) {
                obj["root"] = classType[0];
                return obj;
              }), { }, listOfClasses);
}

var Classes$81 = /* module */[
  /* to_string */to_string$136,
  /* to_obj */to_obj$81
];

function make$88(className, theme, classes, children) {
  return ReasonReact.wrapJsForReason(DialogContentText.default, {
              className: Js_null_undefined.from_opt(className),
              theme: Js_null_undefined.from_opt(theme),
              classes: Js_null_undefined.from_opt(optionMap(to_obj$81, classes))
            }, children);
}

var DialogContentText$1 = /* module */[
  /* Classes */Classes$81,
  /* make */make$88
];

var MuiTheme = [
  Direction,
  Spacing,
  Transitions
];

var WithStyles = [make];

exports.MuiTheme                = MuiTheme;
exports.WithStyles              = WithStyles;
exports.Colors                  = Colors;
exports.Select                  = Select$1;
exports.InputAdornment          = InputAdornment$1;
exports.BottomNavigation        = BottomNavigation$1;
exports.GridListTileBar         = GridListTileBar$1;
exports.TableBody               = TableBody$1;
exports.Fade                    = Fade$1;
exports.CardMedia               = CardMedia$1;
exports.ExpansionPanelActions   = ExpansionPanelActions$1;
exports.ListItemAvatar          = ListItemAvatar$1;
exports.Badge                   = Badge$1;
exports.ButtonBase              = ButtonBase$1;
exports.StepLabel               = StepLabel$1;
exports.Grow                    = Grow$1;
exports.IconButton              = IconButton$1;
exports.TextField               = TextField$1;
exports.ListSubheader           = ListSubheader$1;
exports.DialogTitle             = DialogTitle$1;
exports.DialogContent           = DialogContent$1;
exports.Popover                 = Popover$1;
exports.Avatar                  = Avatar$1;
exports.Stepper                 = Stepper$1;
exports.Tabs                    = Tabs$1;
exports.List                    = List$1;
exports.TableRow                = TableRow$1;
exports.Radio                   = Radio$1;
exports.SvgIcon                 = SvgIcon$1;
exports.Table                   = Table$1;
exports.FormControlLabel        = FormControlLabel$1;
exports.MuiThemeProvider        = MuiThemeProvider$1;
exports.Button                  = Button$1;
exports.Menu                    = Menu$1;
exports.TableFooter             = TableFooter$1;
exports.Grid                    = Grid$1;
exports.Card                    = Card$1;
exports.ListItem                = ListItem$1;
exports.MenuList                = MenuList$1;
exports.ExpansionPanelDetails   = ExpansionPanelDetails$1;
exports.CardContent             = CardContent$1;
exports.Icon                    = Icon$1;
exports.Checkbox                = Checkbox$1;
exports.Dialog                  = Dialog$1;
exports.TableSortLabel          = TableSortLabel$1;
exports.GridList                = GridList$1;
exports.Paper                   = Paper$1;
exports.FormGroup               = FormGroup$1;
exports.CardHeader              = CardHeader$1;
exports.Toolbar                 = Toolbar$1;
exports.ListItemText            = ListItemText$1;
exports.CardActions             = CardActions$1;
exports.Divider                 = Divider$1;
exports.Collapse                = Collapse$1;
exports.ClickAwayListener       = ClickAwayListener$1;
exports.Typography              = Typography$1;
exports.LinearProgress          = LinearProgress$1;
exports.FormLabel               = FormLabel$1;
exports.FormHelperText          = FormHelperText$1;
exports.TablePagination         = TablePagination$1;
exports.Chip                    = Chip$1;
exports.RadioGroup              = RadioGroup$1;
exports.TableCell               = TableCell$1;
exports.Input                   = Input$1;
exports.Tooltip                 = Tooltip$1;
exports.AppBar                  = AppBar$1;
exports.MobileStepper           = MobileStepper$1;
exports.InputLabel              = InputLabel$1;
exports.FormControl             = FormControl$1;
exports.Step                    = Step$1;
exports.MenuItem                = MenuItem$1;
exports.StepContent             = StepContent$1;
exports.BottomNavigationButton  = BottomNavigationButton$1;
exports.Modal                   = Modal$1;
exports.GridListTile            = GridListTile$1;
exports.ExpansionPanel          = ExpansionPanel$1;
exports.Hidden                  = Hidden$1;
exports.DialogActions           = DialogActions$1;
exports.ListItemSecondaryAction = ListItemSecondaryAction$1;
exports.Tab                     = Tab$1;
exports.ListItemIcon            = ListItemIcon$1;
exports.ExpansionPanelSummary   = ExpansionPanelSummary$1;
exports.Slide                   = Slide$1;
exports.Drawer                  = Drawer$1;
exports.StepButton              = StepButton$1;
exports.Snackbar                = Snackbar$1;
exports.CircularProgress        = CircularProgress$1;
exports.Switch                  = Switch$1;
exports.TableHead               = TableHead$1;
exports.SnackbarContent         = SnackbarContent$1;
exports.DialogContentText       = DialogContentText$1;
/* component Not a pure module */
