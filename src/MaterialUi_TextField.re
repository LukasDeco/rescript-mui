
            

                [@bs.deriving jsConverter]
                type margin = [
                    | [@bs.as "none"] `None
| [@bs.as "dense"] `Dense
| [@bs.as "normal"] `Normal
                ];
            [@bs.obj] external makeProps : (~autoComplete: string=?,
~autoFocus: bool=?,
~className: string=?,
~defaultValue: 'union_rnvh=?,
~disabled: bool=?,
~error: bool=?,
~_FormHelperTextProps: Js.t({..})=?,
~fullWidth: bool=?,
~helperText: ReasonReact.reactElement=?,
~id: string=?,
~_InputLabelProps: Js.t({..})=?,
~_InputProps: Js.t({..})=?,
~inputProps: Js.t({..})=?,
~inputRef: 'union_rr61=?,
~label: ReasonReact.reactElement=?,
~margin: string=?,
~multiline: bool=?,
~name: string=?,
~onBlur: ReactEvent.Focus.t => unit=?,
~onChange: 'any_rmhz=?,
~onFocus: ReactEvent.Focus.t => unit=?,
~placeholder: string=?,
~required: bool=?,
~rows: 'union_ryko=?,
~rowsMax: 'union_rjma=?,
~select: bool=?,
~_SelectProps: Js.t({..})=?,
~_type: string=?,
~value: 'union_rzar=?,
~component: 'union_r6qc=?,
 unit) => _ = "";
            [@bs.module "@material-ui/core/TextField/TextField"] external reactClass : ReasonReact.reactClass = "default";
            let make = (
                ~autoComplete: option(string)=?,
~autoFocus: option(bool)=?,
~className: option(string)=?,
~defaultValue: option([ | `String(string) | `Int(int) | `Float(float)  ])=?,
~disabled: option(bool)=?,
~error: option(bool)=?,
~_FormHelperTextProps: option(Js.t({..}))=?,
~fullWidth: option(bool)=?,
~helperText: option(ReasonReact.reactElement)=?,
~id: option(string)=?,
~_InputLabelProps: option(Js.t({..}))=?,
~_InputProps: option(Js.t({..}))=?,
~inputProps: option(Js.t({..}))=?,
~inputRef: option([ | `Callback('genericCallback) | `ObjectGeneric(Js.t({..}))  ])=?,
~label: option(ReasonReact.reactElement)=?,
~margin: option(margin)=?,
~multiline: option(bool)=?,
~name: option(string)=?,
~onBlur: option(ReactEvent.Focus.t => unit)=?,
~onChange: option((ReactEvent.Form.t) => unit)=?,
~onFocus: option(ReactEvent.Focus.t => unit)=?,
~placeholder: option(string)=?,
~required: option(bool)=?,
~rows: option([ | `String(string) | `Int(int) | `Float(float)  ])=?,
~rowsMax: option([ | `String(string) | `Int(int) | `Float(float)  ])=?,
~select: option(bool)=?,
~_SelectProps: option(Js.t({..}))=?,
~type_: option(string)=?,
~value: option([ | `String(string) | `Int(int) | `Float(float) | `Array(array([ | `String(string) | `Int(int) | `Float(float)  ]))  ])=?,
~component: option([ | `String(string) | `Callback('genericCallback) | `ObjectGeneric(Js.t({..}))  ])=?,

                children
            ) => ReasonReact.wrapJsForReason(
                    ~reactClass,
                    ~props=makeProps(~autoComplete=?autoComplete,
~autoFocus=?autoFocus,
~className=?className,
~defaultValue=?defaultValue |. Belt.Option.map((v => MaterialUi_Helpers.unwrapValue(v))),
~disabled=?disabled,
~error=?error,
~_FormHelperTextProps=?_FormHelperTextProps,
~fullWidth=?fullWidth,
~helperText=?helperText,
~id=?id,
~_InputLabelProps=?_InputLabelProps,
~_InputProps=?_InputProps,
~inputProps=?inputProps,
~inputRef=?inputRef |. Belt.Option.map((v => MaterialUi_Helpers.unwrapValue(v))),
~label=?label,
~margin=?margin |. Belt.Option.map((v => marginToJs(v))),
~multiline=?multiline,
~name=?name,
~onBlur=?onBlur,
~onChange=?onChange,
~onFocus=?onFocus,
~placeholder=?placeholder,
~required=?required,
~rows=?rows |. Belt.Option.map((v => MaterialUi_Helpers.unwrapValue(v))),
~rowsMax=?rowsMax |. Belt.Option.map((v => MaterialUi_Helpers.unwrapValue(v))),
~select=?select,
~_SelectProps=?_SelectProps,
~_type=?type_,
~value=?value |. Belt.Option.map((v => MaterialUi_Helpers.unwrapValue(v))),
~component=?component |. Belt.Option.map((v => MaterialUi_Helpers.unwrapValue(v))),
 ()),
                    children
                );
        